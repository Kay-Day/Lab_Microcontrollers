

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 23 09:59:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _PORTDbits	set	3971
    65   000000                     _PORTB	set	3969
    66   000000                     _RB7	set	31759
    67   000000                     _RB6	set	31758
    68   000000                     _RB5	set	31757
    69   000000                     _RB4	set	31756
    70   000000                     _RB3	set	31755
    71   000000                     _RB2	set	31754
    72   000000                     _RB1	set	31753
    73   000000                     _OSCCON	set	4051
    74   000000                     _RB0	set	31752
    75   000000                     _RBPU	set	32655
    76   000000                     _PORTD	set	3971
    77   000000                     _TRISB	set	3987
    78   000000                     _TRISD	set	3989
    79                           
    80                           	psect	smallconst
    81   000800                     __psmallconst:
    82                           	callstack 0
    83   000800  00                 	db	0
    84   000801                     STR_1:
    85   000801  20                 	db	32
    86   000802  50                 	db	80	;'P'
    87   000803  49                 	db	73	;'I'
    88   000804  43                 	db	67	;'C'
    89   000805  20                 	db	32
    90   000806  63                 	db	99	;'c'
    91   000807  61                 	db	97	;'a'
    92   000808  6C                 	db	108	;'l'
    93   000809  63                 	db	99	;'c'
    94   00080A  75                 	db	117	;'u'
    95   00080B  6C                 	db	108	;'l'
    96   00080C  61                 	db	97	;'a'
    97   00080D  74                 	db	116	;'t'
    98   00080E  6F                 	db	111	;'o'
    99   00080F  72                 	db	114	;'r'
   100   000810  00                 	db	0
   101   000811                     STR_2:
   102   000811  57                 	db	87	;'W'
   103   000812  72                 	db	114	;'r'
   104   000813  6F                 	db	111	;'o'
   105   000814  6E                 	db	110	;'n'
   106   000815  67                 	db	103	;'g'
   107   000816  20                 	db	32
   108   000817  46                 	db	70	;'F'
   109   000818  75                 	db	117	;'u'
   110   000819  6E                 	db	110	;'n'
   111   00081A  63                 	db	99	;'c'
   112   00081B  74                 	db	116	;'t'
   113   00081C  69                 	db	105	;'i'
   114   00081D  6F                 	db	111	;'o'
   115   00081E  6E                 	db	110	;'n'
   116   00081F  00                 	db	0
   117   000820  00                 	db	0	; dummy byte at the end
   118   000000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   001418                     __pcinit:
   123                           	callstack 0
   124   001418                     start_initialization:
   125                           	callstack 0
   126   001418                     __initialization:
   127                           	callstack 0
   128   001418                     end_of_initialization:
   129                           	callstack 0
   130   001418                     __end_of__initialization:
   131                           	callstack 0
   132   001418  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133   00141A  6EF8               	movwf	tblptru,c
   134   00141C  0100               	movlb	0
   135   00141E  EFE3  F005         	goto	_main	;jump to C main() function
   136                           
   137                           	psect	cstackCOMRAM
   138   000001                     __pcstackCOMRAM:
   139                           	callstack 0
   140   000001                     ??_keypad_scanner:
   141   000001                     ?_char2num:
   142                           	callstack 0
   143   000001                     ?_num2char:
   144                           	callstack 0
   145   000001                     ?___wmul:
   146                           	callstack 0
   147   000001                     ?___awdiv:
   148                           	callstack 0
   149   000001                     LCDWriteNibble@rs:
   150                           	callstack 0
   151   000001                     num2char@ch:
   152                           	callstack 0
   153   000001                     ___wmul@multiplier:
   154                           	callstack 0
   155   000001                     ___awdiv@dividend:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x0
   159   000001                     	ds	1
   160   000002                     LCDWriteNibble@ch:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x1
   164   000002                     	ds	1
   165   000003                     ??_LCDPutCmd:
   166   000003                     ??_LCDPutChar:
   167   000003                     ??_char2num:
   168   000003                     ??_num2char:
   169   000003                     switch_press_scan@key:
   170                           	callstack 0
   171   000003                     ___wmul@multiplicand:
   172                           	callstack 0
   173   000003                     ___awdiv@divisor:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x2
   177   000003                     	ds	1
   178   000004                     LCDPutChar@ch:
   179                           	callstack 0
   180   000004                     LCDPutCmd@ch:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x3
   184   000004                     	ds	1
   185   000005                     ??_LCD_Initialize:
   186   000005                     LCDGoto@ln:
   187                           	callstack 0
   188   000005                     char2num@ch:
   189                           	callstack 0
   190   000005                     num2char@num:
   191                           	callstack 0
   192   000005                     ___awdiv@counter:
   193                           	callstack 0
   194   000005                     LCDPutStr@str:
   195                           	callstack 0
   196   000005                     ___wmul@product:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x4
   200   000005                     	ds	1
   201   000006                     ??_LCDGoto:
   202   000006                     ___awdiv@sign:
   203                           	callstack 0
   204   000006                     char2num@num:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x5
   208   000006                     	ds	1
   209   000007                     ??_LCDPutStr:
   210   000007                     ___awdiv@quotient:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x6
   214   000007                     	ds	1
   215   000008                     _LCDGoto$176:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x7
   219   000008                     	ds	1
   220   000009                     LCDPutStr@i:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x8
   224   000009                     	ds	1
   225   00000A                     LCDGoto@pos:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x9
   229   00000A                     	ds	1
   230   00000B                     ??_printERROR:
   231   00000B                     result@numb:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0xA
   235   00000B                     	ds	2
   236   00000D                     result@TenthDigit:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0xC
   240   00000D                     	ds	1
   241   00000E                     ??_main:
   242                           
   243                           ; 1 bytes @ 0xD
   244   00000E                     	ds	2
   245   000010                     main@key_right:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0xF
   249   000010                     	ds	1
   250   000011                     main@key_res:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x10
   254   000011                     	ds	1
   255   000012                     main@math:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x11
   259   000012                     	ds	1
   260   000013                     main@key:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x12
   264   000013                     	ds	1
   265   000014                     main@key_math:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x13
   269   000014                     	ds	1
   270   000015                     main@leftnum:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x14
   274   000015                     	ds	2
   275   000017                     main@rightnum:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x16
   279   000017                     	ds	2
   280                           
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 79 in file "Lab06.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  key_res         1   16[COMRAM] unsigned char 
   291 ;;  key_right       1   15[COMRAM] unsigned char 
   292 ;;  key_math        1   19[COMRAM] unsigned char 
   293 ;;  rightnum        2   22[COMRAM] int 
   294 ;;  leftnum         2   20[COMRAM] int 
   295 ;;  key             1   18[COMRAM] unsigned char 
   296 ;;  math            1   17[COMRAM] unsigned char 
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   306 ;;      Params:         0       0       0       0       0       0       0       0       0
   307 ;;      Locals:         9       0       0       0       0       0       0       0       0
   308 ;;      Temps:          2       0       0       0       0       0       0       0       0
   309 ;;      Totals:        11       0       0       0       0       0       0       0       0
   310 ;;Total ram usage:       11 bytes
   311 ;; Hardware stack levels required when called: 4
   312 ;; This function calls:
   313 ;;		_InitKeypad
   314 ;;		_LCDPutChar
   315 ;;		_LCDPutCmd
   316 ;;		_LCDPutStr
   317 ;;		_LCD_Initialize
   318 ;;		___awdiv
   319 ;;		___wmul
   320 ;;		_char2num
   321 ;;		_printERROR
   322 ;;		_result
   323 ;;		_switch_press_scan
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text0
   330   000BC6                     __ptext0:
   331                           	callstack 0
   332   000BC6                     _main:
   333                           	callstack 27
   334   000BC6                     
   335                           ;Lab06.c: 80:     OSCCON=0x72;
   336   000BC6  0E72               	movlw	114
   337   000BC8  6ED3               	movwf	211,c	;volatile
   338   000BCA                     
   339                           ;Lab06.c: 81:     LCD_Initialize();
   340   000BCA  EC7D  F009         	call	_LCD_Initialize	;wreg free
   341   000BCE                     
   342                           ;Lab06.c: 82:     LCDPutStr(" PIC calculator");
   343   000BCE  0E01               	movlw	low STR_1
   344   000BD0  6E05               	movwf	LCDPutStr@str^0,c
   345   000BD2  0E08               	movlw	high STR_1
   346   000BD4  6E06               	movwf	(LCDPutStr@str+1)^0,c
   347   000BD6  EC12  F009         	call	_LCDPutStr	;wreg free
   348   000BDA                     
   349                           ;Lab06.c: 83:     _delay((unsigned long)((500)*(20000000/4000.0)));
   350   000BDA  0E0D               	movlw	13
   351   000BDC  6E0F               	movwf	(??_main+1)^0,c
   352   000BDE  0EAF               	movlw	175
   353   000BE0  6E0E               	movwf	??_main^0,c
   354   000BE2  0EB6               	movlw	182
   355   000BE4                     u1147:
   356   000BE4  2EE8               	decfsz	wreg,f,c
   357   000BE6  D7FE               	bra	u1147
   358   000BE8  2E0E               	decfsz	??_main^0,f,c
   359   000BEA  D7FC               	bra	u1147
   360   000BEC  2E0F               	decfsz	(??_main+1)^0,f,c
   361   000BEE  D7FA               	bra	u1147
   362   000BF0  D000               	nop2	
   363   000BF2                     
   364                           ;Lab06.c: 84:     LCDPutCmd(0x01);
   365   000BF2  0E01               	movlw	1
   366   000BF4  EC5E  F009         	call	_LCDPutCmd
   367   000BF8                     
   368                           ;Lab06.c: 85:     InitKeypad();
   369   000BF8  EC06  F00A         	call	_InitKeypad	;wreg free
   370   000BFC                     l1552:
   371                           
   372                           ;Lab06.c: 91:         key = switch_press_scan();
   373   000BFC  ECF4  F009         	call	_switch_press_scan	;wreg free
   374   000C00  6E13               	movwf	main@key^0,c
   375   000C02                     
   376                           ;Lab06.c: 92:         LCDPutChar(key);
   377   000C02  5013               	movf	main@key^0,w,c
   378   000C04  ECB4  F009         	call	_LCDPutChar
   379   000C08                     
   380                           ;Lab06.c: 93:         leftnum = char2num(key);
   381   000C08  5013               	movf	main@key^0,w,c
   382   000C0A  EC94  F007         	call	_char2num
   383   000C0E  C001  F015         	movff	?_char2num,main@leftnum
   384   000C12  C002  F016         	movff	?_char2num+1,main@leftnum+1
   385   000C16                     
   386                           ;Lab06.c: 94:         if(key == 'c') LCDPutCmd(0x01);
   387   000C16  0E63               	movlw	99
   388   000C18  1813               	xorwf	main@key^0,w,c
   389   000C1A  A4D8               	btfss	status,2,c
   390   000C1C  EF12  F006         	goto	u861
   391   000C20  EF14  F006         	goto	u860
   392   000C24                     u861:
   393   000C24  EF19  F006         	goto	l1562
   394   000C28                     u860:
   395   000C28  0E01               	movlw	1
   396   000C2A  EC5E  F009         	call	_LCDPutCmd
   397   000C2E  EFFE  F005         	goto	l1552
   398   000C32                     l1562:
   399   000C32  5015               	movf	main@leftnum^0,w,c
   400   000C34  1016               	iorwf	(main@leftnum+1)^0,w,c
   401   000C36  B4D8               	btfsc	status,2,c
   402   000C38  EF20  F006         	goto	u871
   403   000C3C  EF22  F006         	goto	u870
   404   000C40                     u871:
   405   000C40  EF7B  F006         	goto	l1582
   406   000C44                     u870:
   407   000C44  0415               	decf	main@leftnum^0,w,c
   408   000C46  1016               	iorwf	(main@leftnum+1)^0,w,c
   409   000C48  B4D8               	btfsc	status,2,c
   410   000C4A  EF29  F006         	goto	u881
   411   000C4E  EF2B  F006         	goto	u880
   412   000C52                     u881:
   413   000C52  EF7B  F006         	goto	l1582
   414   000C56                     u880:
   415   000C56  0E02               	movlw	2
   416   000C58  1815               	xorwf	main@leftnum^0,w,c
   417   000C5A  1016               	iorwf	(main@leftnum+1)^0,w,c
   418   000C5C  B4D8               	btfsc	status,2,c
   419   000C5E  EF33  F006         	goto	u891
   420   000C62  EF35  F006         	goto	u890
   421   000C66                     u891:
   422   000C66  EF7B  F006         	goto	l1582
   423   000C6A                     u890:
   424   000C6A  0E03               	movlw	3
   425   000C6C  1815               	xorwf	main@leftnum^0,w,c
   426   000C6E  1016               	iorwf	(main@leftnum+1)^0,w,c
   427   000C70  B4D8               	btfsc	status,2,c
   428   000C72  EF3D  F006         	goto	u901
   429   000C76  EF3F  F006         	goto	u900
   430   000C7A                     u901:
   431   000C7A  EF7B  F006         	goto	l1582
   432   000C7E                     u900:
   433   000C7E  0E04               	movlw	4
   434   000C80  1815               	xorwf	main@leftnum^0,w,c
   435   000C82  1016               	iorwf	(main@leftnum+1)^0,w,c
   436   000C84  B4D8               	btfsc	status,2,c
   437   000C86  EF47  F006         	goto	u911
   438   000C8A  EF49  F006         	goto	u910
   439   000C8E                     u911:
   440   000C8E  EF7B  F006         	goto	l1582
   441   000C92                     u910:
   442   000C92  0E05               	movlw	5
   443   000C94  1815               	xorwf	main@leftnum^0,w,c
   444   000C96  1016               	iorwf	(main@leftnum+1)^0,w,c
   445   000C98  B4D8               	btfsc	status,2,c
   446   000C9A  EF51  F006         	goto	u921
   447   000C9E  EF53  F006         	goto	u920
   448   000CA2                     u921:
   449   000CA2  EF7B  F006         	goto	l1582
   450   000CA6                     u920:
   451   000CA6  0E06               	movlw	6
   452   000CA8  1815               	xorwf	main@leftnum^0,w,c
   453   000CAA  1016               	iorwf	(main@leftnum+1)^0,w,c
   454   000CAC  B4D8               	btfsc	status,2,c
   455   000CAE  EF5B  F006         	goto	u931
   456   000CB2  EF5D  F006         	goto	u930
   457   000CB6                     u931:
   458   000CB6  EF7B  F006         	goto	l1582
   459   000CBA                     u930:
   460   000CBA  0E07               	movlw	7
   461   000CBC  1815               	xorwf	main@leftnum^0,w,c
   462   000CBE  1016               	iorwf	(main@leftnum+1)^0,w,c
   463   000CC0  B4D8               	btfsc	status,2,c
   464   000CC2  EF65  F006         	goto	u941
   465   000CC6  EF67  F006         	goto	u940
   466   000CCA                     u941:
   467   000CCA  EF7B  F006         	goto	l1582
   468   000CCE                     u940:
   469   000CCE  0E08               	movlw	8
   470   000CD0  1815               	xorwf	main@leftnum^0,w,c
   471   000CD2  1016               	iorwf	(main@leftnum+1)^0,w,c
   472   000CD4  B4D8               	btfsc	status,2,c
   473   000CD6  EF6F  F006         	goto	u951
   474   000CDA  EF71  F006         	goto	u950
   475   000CDE                     u951:
   476   000CDE  EF7B  F006         	goto	l1582
   477   000CE2                     u950:
   478   000CE2  0E09               	movlw	9
   479   000CE4  1815               	xorwf	main@leftnum^0,w,c
   480   000CE6  1016               	iorwf	(main@leftnum+1)^0,w,c
   481   000CE8  A4D8               	btfss	status,2,c
   482   000CEA  EF79  F006         	goto	u961
   483   000CEE  EF7B  F006         	goto	u960
   484   000CF2                     u961:
   485   000CF2  EF37  F007         	goto	l1624
   486   000CF6                     u960:
   487   000CF6                     l1582:
   488                           
   489                           ;Lab06.c: 99:         leftnum == 8 || leftnum == 9){;Lab06.c: 100:             char key_
      +                          math = switch_press_scan();
   490   000CF6  ECF4  F009         	call	_switch_press_scan	;wreg free
   491   000CFA  6E14               	movwf	main@key_math^0,c
   492                           
   493                           ;Lab06.c: 101:             LCDPutChar(key_math);
   494   000CFC  5014               	movf	main@key_math^0,w,c
   495   000CFE  ECB4  F009         	call	_LCDPutChar
   496   000D02                     
   497                           ;Lab06.c: 102:             math = key_math;
   498   000D02  C014  F012         	movff	main@key_math,main@math
   499   000D06                     
   500                           ;Lab06.c: 103:             if(key_math != '+' || key_math != '-' || key_math != '*' || k
      +                          ey_math != '/'){
   501   000D06  0E2B               	movlw	43
   502   000D08  1814               	xorwf	main@key_math^0,w,c
   503   000D0A  A4D8               	btfss	status,2,c
   504   000D0C  EF8A  F006         	goto	u971
   505   000D10  EF8C  F006         	goto	u970
   506   000D14                     u971:
   507   000D14  EFA7  F006         	goto	l1594
   508   000D18                     u970:
   509   000D18  0E2D               	movlw	45
   510   000D1A  1814               	xorwf	main@key_math^0,w,c
   511   000D1C  A4D8               	btfss	status,2,c
   512   000D1E  EF93  F006         	goto	u981
   513   000D22  EF95  F006         	goto	u980
   514   000D26                     u981:
   515   000D26  EFA7  F006         	goto	l1594
   516   000D2A                     u980:
   517   000D2A  0E2A               	movlw	42
   518   000D2C  1814               	xorwf	main@key_math^0,w,c
   519   000D2E  A4D8               	btfss	status,2,c
   520   000D30  EF9C  F006         	goto	u991
   521   000D34  EF9E  F006         	goto	u990
   522   000D38                     u991:
   523   000D38  EFA7  F006         	goto	l1594
   524   000D3C                     u990:
   525   000D3C  0E2F               	movlw	47
   526   000D3E  1814               	xorwf	main@key_math^0,w,c
   527   000D40  B4D8               	btfsc	status,2,c
   528   000D42  EFA5  F006         	goto	u1001
   529   000D46  EFA7  F006         	goto	u1000
   530   000D4A                     u1001:
   531   000D4A  EF37  F007         	goto	l1624
   532   000D4E                     u1000:
   533   000D4E                     l1594:
   534                           
   535                           ;Lab06.c: 104:                 char key_right = switch_press_scan();
   536   000D4E  ECF4  F009         	call	_switch_press_scan	;wreg free
   537   000D52  6E10               	movwf	main@key_right^0,c
   538                           
   539                           ;Lab06.c: 105:                 LCDPutChar(key_right);
   540   000D54  5010               	movf	main@key_right^0,w,c
   541   000D56  ECB4  F009         	call	_LCDPutChar
   542                           
   543                           ;Lab06.c: 106:                 rightnum = char2num(key_right);
   544   000D5A  5010               	movf	main@key_right^0,w,c
   545   000D5C  EC94  F007         	call	_char2num
   546   000D60  C001  F017         	movff	?_char2num,main@rightnum
   547   000D64  C002  F018         	movff	?_char2num+1,main@rightnum+1
   548   000D68                     
   549                           ;Lab06.c: 108:                 if(rightnum == 0 || rightnum == 1 ||
   550   000D68  5017               	movf	main@rightnum^0,w,c
   551   000D6A  1018               	iorwf	(main@rightnum+1)^0,w,c
   552   000D6C  B4D8               	btfsc	status,2,c
   553   000D6E  EFBB  F006         	goto	u1011
   554   000D72  EFBD  F006         	goto	u1010
   555   000D76                     u1011:
   556   000D76  EF16  F007         	goto	l1616
   557   000D7A                     u1010:
   558   000D7A  0417               	decf	main@rightnum^0,w,c
   559   000D7C  1018               	iorwf	(main@rightnum+1)^0,w,c
   560   000D7E  B4D8               	btfsc	status,2,c
   561   000D80  EFC4  F006         	goto	u1021
   562   000D84  EFC6  F006         	goto	u1020
   563   000D88                     u1021:
   564   000D88  EF16  F007         	goto	l1616
   565   000D8C                     u1020:
   566   000D8C  0E02               	movlw	2
   567   000D8E  1817               	xorwf	main@rightnum^0,w,c
   568   000D90  1018               	iorwf	(main@rightnum+1)^0,w,c
   569   000D92  B4D8               	btfsc	status,2,c
   570   000D94  EFCE  F006         	goto	u1031
   571   000D98  EFD0  F006         	goto	u1030
   572   000D9C                     u1031:
   573   000D9C  EF16  F007         	goto	l1616
   574   000DA0                     u1030:
   575   000DA0  0E03               	movlw	3
   576   000DA2  1817               	xorwf	main@rightnum^0,w,c
   577   000DA4  1018               	iorwf	(main@rightnum+1)^0,w,c
   578   000DA6  B4D8               	btfsc	status,2,c
   579   000DA8  EFD8  F006         	goto	u1041
   580   000DAC  EFDA  F006         	goto	u1040
   581   000DB0                     u1041:
   582   000DB0  EF16  F007         	goto	l1616
   583   000DB4                     u1040:
   584   000DB4  0E04               	movlw	4
   585   000DB6  1817               	xorwf	main@rightnum^0,w,c
   586   000DB8  1018               	iorwf	(main@rightnum+1)^0,w,c
   587   000DBA  B4D8               	btfsc	status,2,c
   588   000DBC  EFE2  F006         	goto	u1051
   589   000DC0  EFE4  F006         	goto	u1050
   590   000DC4                     u1051:
   591   000DC4  EF16  F007         	goto	l1616
   592   000DC8                     u1050:
   593   000DC8  0E05               	movlw	5
   594   000DCA  1817               	xorwf	main@rightnum^0,w,c
   595   000DCC  1018               	iorwf	(main@rightnum+1)^0,w,c
   596   000DCE  B4D8               	btfsc	status,2,c
   597   000DD0  EFEC  F006         	goto	u1061
   598   000DD4  EFEE  F006         	goto	u1060
   599   000DD8                     u1061:
   600   000DD8  EF16  F007         	goto	l1616
   601   000DDC                     u1060:
   602   000DDC  0E06               	movlw	6
   603   000DDE  1817               	xorwf	main@rightnum^0,w,c
   604   000DE0  1018               	iorwf	(main@rightnum+1)^0,w,c
   605   000DE2  B4D8               	btfsc	status,2,c
   606   000DE4  EFF6  F006         	goto	u1071
   607   000DE8  EFF8  F006         	goto	u1070
   608   000DEC                     u1071:
   609   000DEC  EF16  F007         	goto	l1616
   610   000DF0                     u1070:
   611   000DF0  0E07               	movlw	7
   612   000DF2  1817               	xorwf	main@rightnum^0,w,c
   613   000DF4  1018               	iorwf	(main@rightnum+1)^0,w,c
   614   000DF6  B4D8               	btfsc	status,2,c
   615   000DF8  EF00  F007         	goto	u1081
   616   000DFC  EF02  F007         	goto	u1080
   617   000E00                     u1081:
   618   000E00  EF16  F007         	goto	l1616
   619   000E04                     u1080:
   620   000E04  0E08               	movlw	8
   621   000E06  1817               	xorwf	main@rightnum^0,w,c
   622   000E08  1018               	iorwf	(main@rightnum+1)^0,w,c
   623   000E0A  B4D8               	btfsc	status,2,c
   624   000E0C  EF0A  F007         	goto	u1091
   625   000E10  EF0C  F007         	goto	u1090
   626   000E14                     u1091:
   627   000E14  EF16  F007         	goto	l1616
   628   000E18                     u1090:
   629   000E18  0E09               	movlw	9
   630   000E1A  1817               	xorwf	main@rightnum^0,w,c
   631   000E1C  1018               	iorwf	(main@rightnum+1)^0,w,c
   632   000E1E  A4D8               	btfss	status,2,c
   633   000E20  EF14  F007         	goto	u1101
   634   000E24  EF16  F007         	goto	u1100
   635   000E28                     u1101:
   636   000E28  EFFE  F005         	goto	l1552
   637   000E2C                     u1100:
   638   000E2C                     l1616:
   639                           
   640                           ;Lab06.c: 112:                 rightnum == 8 || rightnum == 9){;Lab06.c: 113:           
      +                                    char key_res = switch_press_scan();
   641   000E2C  ECF4  F009         	call	_switch_press_scan	;wreg free
   642   000E30  6E11               	movwf	main@key_res^0,c
   643                           
   644                           ;Lab06.c: 114:                     LCDPutChar(key_res);
   645   000E32  5011               	movf	main@key_res^0,w,c
   646   000E34  ECB4  F009         	call	_LCDPutChar
   647   000E38                     
   648                           ;Lab06.c: 115:                     if(key_res == '='){
   649   000E38  0E3D               	movlw	61
   650   000E3A  1811               	xorwf	main@key_res^0,w,c
   651   000E3C  A4D8               	btfss	status,2,c
   652   000E3E  EF23  F007         	goto	u1111
   653   000E42  EF25  F007         	goto	u1110
   654   000E46                     u1111:
   655   000E46  EF37  F007         	goto	l1624
   656   000E4A                     u1110:
   657   000E4A                     
   658                           ;Lab06.c: 116:                         if(math == '/' && rightnum == 0){
   659   000E4A  0E2F               	movlw	47
   660   000E4C  1812               	xorwf	main@math^0,w,c
   661   000E4E  A4D8               	btfss	status,2,c
   662   000E50  EF2C  F007         	goto	u1121
   663   000E54  EF2E  F007         	goto	u1120
   664   000E58                     u1121:
   665   000E58  EF73  F007         	goto	l1636
   666   000E5C                     u1120:
   667   000E5C  5017               	movf	main@rightnum^0,w,c
   668   000E5E  1018               	iorwf	(main@rightnum+1)^0,w,c
   669   000E60  A4D8               	btfss	status,2,c
   670   000E62  EF35  F007         	goto	u1131
   671   000E66  EF37  F007         	goto	u1130
   672   000E6A                     u1131:
   673   000E6A  EF73  F007         	goto	l1636
   674   000E6E                     u1130:
   675   000E6E                     l1624:
   676                           
   677                           ;Lab06.c: 119:                             printERROR();
   678   000E6E  EC99  F009         	call	_printERROR	;wreg free
   679                           
   680                           ;Lab06.c: 120:                         }
   681   000E72  EFFE  F005         	goto	l1552
   682   000E76                     l1626:
   683   000E76  5017               	movf	main@rightnum^0,w,c
   684   000E78  2415               	addwf	main@leftnum^0,w,c
   685   000E7A  6E0B               	movwf	result@numb^0,c
   686   000E7C  5018               	movf	(main@rightnum+1)^0,w,c
   687   000E7E  2016               	addwfc	(main@leftnum+1)^0,w,c
   688   000E80  6E0C               	movwf	(result@numb+1)^0,c
   689   000E82  EC3A  F009         	call	_result	;wreg free
   690   000E86  EFFE  F005         	goto	l1552
   691   000E8A                     l1628:
   692   000E8A  5017               	movf	main@rightnum^0,w,c
   693   000E8C  5C15               	subwf	main@leftnum^0,w,c
   694   000E8E  6E0B               	movwf	result@numb^0,c
   695   000E90  5018               	movf	(main@rightnum+1)^0,w,c
   696   000E92  5816               	subwfb	(main@leftnum+1)^0,w,c
   697   000E94  6E0C               	movwf	(result@numb+1)^0,c
   698   000E96  EC3A  F009         	call	_result	;wreg free
   699   000E9A  EFFE  F005         	goto	l1552
   700   000E9E                     l1630:
   701   000E9E  C015  F001         	movff	main@leftnum,___wmul@multiplier
   702   000EA2  C016  F002         	movff	main@leftnum+1,___wmul@multiplier+1
   703   000EA6  C017  F003         	movff	main@rightnum,___wmul@multiplicand
   704   000EAA  C018  F004         	movff	main@rightnum+1,___wmul@multiplicand+1
   705   000EAE  ECE1  F009         	call	___wmul	;wreg free
   706   000EB2  C001  F00B         	movff	?___wmul,result@numb
   707   000EB6  C002  F00C         	movff	?___wmul+1,result@numb+1
   708   000EBA  EC3A  F009         	call	_result	;wreg free
   709   000EBE  EFFE  F005         	goto	l1552
   710   000EC2                     l1632:
   711   000EC2  C015  F001         	movff	main@leftnum,___awdiv@dividend
   712   000EC6  C016  F002         	movff	main@leftnum+1,___awdiv@dividend+1
   713   000ECA  C017  F003         	movff	main@rightnum,___awdiv@divisor
   714   000ECE  C018  F004         	movff	main@rightnum+1,___awdiv@divisor+1
   715   000ED2  EC77  F008         	call	___awdiv	;wreg free
   716   000ED6  C001  F00B         	movff	?___awdiv,result@numb
   717   000EDA  C002  F00C         	movff	?___awdiv+1,result@numb+1
   718   000EDE  EC3A  F009         	call	_result	;wreg free
   719   000EE2  EFFE  F005         	goto	l1552
   720   000EE6                     l1636:
   721   000EE6  5012               	movf	main@math^0,w,c
   722   000EE8  6E0E               	movwf	??_main^0,c
   723   000EEA  6A0F               	clrf	(??_main+1)^0,c
   724                           
   725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   726                           ; Switch size 1, requested type "simple"
   727                           ; Number of cases is 1, Range of values is 0 to 0
   728                           ; switch strategies available:
   729                           ; Name         Instructions Cycles
   730                           ; simple_byte            4     3 (average)
   731                           ;	Chosen strategy is simple_byte
   732   000EEC  500F               	movf	(??_main+1)^0,w,c
   733   000EEE  0A00               	xorlw	0	; case 0
   734   000EF0  B4D8               	btfsc	status,2,c
   735   000EF2  EF7D  F007         	goto	l1660
   736   000EF6  EF90  F007         	goto	l66
   737   000EFA                     l1660:
   738                           
   739                           ; Switch size 1, requested type "simple"
   740                           ; Number of cases is 4, Range of values is 42 to 47
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte           13     7 (average)
   744                           ;	Chosen strategy is simple_byte
   745   000EFA  500E               	movf	??_main^0,w,c
   746   000EFC  0A2A               	xorlw	42	; case 42
   747   000EFE  B4D8               	btfsc	status,2,c
   748   000F00  EF4F  F007         	goto	l1630
   749   000F04  0A01               	xorlw	1	; case 43
   750   000F06  B4D8               	btfsc	status,2,c
   751   000F08  EF3B  F007         	goto	l1626
   752   000F0C  0A06               	xorlw	6	; case 45
   753   000F0E  B4D8               	btfsc	status,2,c
   754   000F10  EF45  F007         	goto	l1628
   755   000F14  0A02               	xorlw	2	; case 47
   756   000F16  B4D8               	btfsc	status,2,c
   757   000F18  EF61  F007         	goto	l1632
   758   000F1C  EF90  F007         	goto	l66
   759   000F20                     l66:
   760                           
   761                           ;Lab06.c: 133:             }else {
   762   000F20  EFFE  F005         	goto	l1552
   763   000F24  EF00  F000         	goto	start
   764   000F28                     __end_of_main:
   765                           	callstack 0
   766                           
   767 ;; *************** function _switch_press_scan *****************
   768 ;; Defined at:
   769 ;;		line 142 in file "Lab06.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  key             1    2[COMRAM] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      unsigned char 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   783 ;;      Params:         0       0       0       0       0       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0       0       0
   786 ;;      Totals:         1       0       0       0       0       0       0       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; Hardware stack levels required when called: 1
   790 ;; This function calls:
   791 ;;		_keypad_scanner
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text1
   798   0013E8                     __ptext1:
   799                           	callstack 0
   800   0013E8                     _switch_press_scan:
   801                           	callstack 29
   802   0013E8                     
   803                           ;Lab06.c: 143:     char key = 'n';
   804   0013E8  0E6E               	movlw	110
   805   0013EA  6E03               	movwf	switch_press_scan@key^0,c
   806                           
   807                           ;Lab06.c: 144:     while(key=='n')
   808   0013EC  EFFB  F009         	goto	l1106
   809   0013F0                     l1104:
   810                           
   811                           ;Lab06.c: 145:         key = keypad_scanner();
   812   0013F0  EC11  F004         	call	_keypad_scanner	;wreg free
   813   0013F4  6E03               	movwf	switch_press_scan@key^0,c
   814   0013F6                     l1106:
   815                           
   816                           ;Lab06.c: 144:     while(key=='n')
   817   0013F6  0E6E               	movlw	110
   818   0013F8  1803               	xorwf	switch_press_scan@key^0,w,c
   819   0013FA  B4D8               	btfsc	status,2,c
   820   0013FC  EF02  F00A         	goto	u381
   821   001400  EF04  F00A         	goto	u380
   822   001404                     u381:
   823   001404  EFF8  F009         	goto	l1104
   824   001408                     u380:
   825   001408                     
   826                           ;Lab06.c: 146:     return key;
   827   001408  5003               	movf	switch_press_scan@key^0,w,c
   828   00140A  0012               	return		;funcret
   829   00140C                     __end_of_switch_press_scan:
   830                           	callstack 0
   831                           
   832 ;; *************** function _keypad_scanner *****************
   833 ;; Defined at:
   834 ;;		line 148 in file "Lab06.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      unsigned char 
   841 ;; Registers used:
   842 ;;		wreg
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   848 ;;      Params:         0       0       0       0       0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0
   850 ;;      Temps:          2       0       0       0       0       0       0       0       0
   851 ;;      Totals:         2       0       0       0       0       0       0       0       0
   852 ;;Total ram usage:        2 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_switch_press_scan
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text2
   862   000822                     __ptext2:
   863                           	callstack 0
   864   000822                     _keypad_scanner:
   865                           	callstack 29
   866   000822                     
   867                           ;Lab06.c: 149:     RB0 = 0; RB1 = 1; RB2 = 1; RB3 = 1;
   868   000822  9081               	bcf	3969,0,c	;volatile
   869   000824  8281               	bsf	3969,1,c	;volatile
   870   000826  8481               	bsf	3969,2,c	;volatile
   871   000828  8681               	bsf	3969,3,c	;volatile
   872                           
   873                           ;Lab06.c: 150:     if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB4==0); return '7'; }
   874   00082A  B881               	btfsc	3969,4,c	;volatile
   875   00082C  EF1A  F004         	goto	u31
   876   000830  EF1C  F004         	goto	u30
   877   000834                     u31:
   878   000834  EF31  F004         	goto	l92
   879   000838                     u30:
   880   000838  0E03               	movlw	3
   881   00083A  6E02               	movwf	(??_keypad_scanner+1)^0,c
   882   00083C  0E8A               	movlw	138
   883   00083E  6E01               	movwf	??_keypad_scanner^0,c
   884   000840  0E56               	movlw	86
   885   000842                     u1157:
   886   000842  2EE8               	decfsz	wreg,f,c
   887   000844  D7FE               	bra	u1157
   888   000846  2E01               	decfsz	??_keypad_scanner^0,f,c
   889   000848  D7FC               	bra	u1157
   890   00084A  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
   891   00084C  D7FA               	bra	u1157
   892   00084E                     l93:
   893   00084E  A881               	btfss	3969,4,c	;volatile
   894   000850  EF2C  F004         	goto	u41
   895   000854  EF2E  F004         	goto	u40
   896   000858                     u41:
   897   000858  EF27  F004         	goto	l93
   898   00085C                     u40:
   899   00085C  0E37               	movlw	55
   900   00085E  EFE2  F005         	goto	l96
   901   000862                     l92:
   902                           
   903                           ;Lab06.c: 151:     if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB5==0); return '8'; }
   904   000862  BA81               	btfsc	3969,5,c	;volatile
   905   000864  EF36  F004         	goto	u51
   906   000868  EF38  F004         	goto	u50
   907   00086C                     u51:
   908   00086C  EF4D  F004         	goto	l97
   909   000870                     u50:
   910   000870  0E03               	movlw	3
   911   000872  6E02               	movwf	(??_keypad_scanner+1)^0,c
   912   000874  0E8A               	movlw	138
   913   000876  6E01               	movwf	??_keypad_scanner^0,c
   914   000878  0E56               	movlw	86
   915   00087A                     u1167:
   916   00087A  2EE8               	decfsz	wreg,f,c
   917   00087C  D7FE               	bra	u1167
   918   00087E  2E01               	decfsz	??_keypad_scanner^0,f,c
   919   000880  D7FC               	bra	u1167
   920   000882  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
   921   000884  D7FA               	bra	u1167
   922   000886                     l98:
   923   000886  AA81               	btfss	3969,5,c	;volatile
   924   000888  EF48  F004         	goto	u61
   925   00088C  EF4A  F004         	goto	u60
   926   000890                     u61:
   927   000890  EF43  F004         	goto	l98
   928   000894                     u60:
   929   000894  0E38               	movlw	56
   930   000896  EFE2  F005         	goto	l96
   931   00089A                     l97:
   932                           
   933                           ;Lab06.c: 152:     if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB6==0); return '9'; }
   934   00089A  BC81               	btfsc	3969,6,c	;volatile
   935   00089C  EF52  F004         	goto	u71
   936   0008A0  EF54  F004         	goto	u70
   937   0008A4                     u71:
   938   0008A4  EF69  F004         	goto	l101
   939   0008A8                     u70:
   940   0008A8  0E03               	movlw	3
   941   0008AA  6E02               	movwf	(??_keypad_scanner+1)^0,c
   942   0008AC  0E8A               	movlw	138
   943   0008AE  6E01               	movwf	??_keypad_scanner^0,c
   944   0008B0  0E56               	movlw	86
   945   0008B2                     u1177:
   946   0008B2  2EE8               	decfsz	wreg,f,c
   947   0008B4  D7FE               	bra	u1177
   948   0008B6  2E01               	decfsz	??_keypad_scanner^0,f,c
   949   0008B8  D7FC               	bra	u1177
   950   0008BA  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
   951   0008BC  D7FA               	bra	u1177
   952   0008BE                     l102:
   953   0008BE  AC81               	btfss	3969,6,c	;volatile
   954   0008C0  EF64  F004         	goto	u81
   955   0008C4  EF66  F004         	goto	u80
   956   0008C8                     u81:
   957   0008C8  EF5F  F004         	goto	l102
   958   0008CC                     u80:
   959   0008CC  0E39               	movlw	57
   960   0008CE  EFE2  F005         	goto	l96
   961   0008D2                     l101:
   962                           
   963                           ;Lab06.c: 153:     if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB7==0); return '/'; }
   964   0008D2  BE81               	btfsc	3969,7,c	;volatile
   965   0008D4  EF6E  F004         	goto	u91
   966   0008D8  EF70  F004         	goto	u90
   967   0008DC                     u91:
   968   0008DC  EF85  F004         	goto	l105
   969   0008E0                     u90:
   970   0008E0  0E03               	movlw	3
   971   0008E2  6E02               	movwf	(??_keypad_scanner+1)^0,c
   972   0008E4  0E8A               	movlw	138
   973   0008E6  6E01               	movwf	??_keypad_scanner^0,c
   974   0008E8  0E56               	movlw	86
   975   0008EA                     u1187:
   976   0008EA  2EE8               	decfsz	wreg,f,c
   977   0008EC  D7FE               	bra	u1187
   978   0008EE  2E01               	decfsz	??_keypad_scanner^0,f,c
   979   0008F0  D7FC               	bra	u1187
   980   0008F2  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
   981   0008F4  D7FA               	bra	u1187
   982   0008F6                     l106:
   983   0008F6  AE81               	btfss	3969,7,c	;volatile
   984   0008F8  EF80  F004         	goto	u101
   985   0008FC  EF82  F004         	goto	u100
   986   000900                     u101:
   987   000900  EF7B  F004         	goto	l106
   988   000904                     u100:
   989   000904  0E2F               	movlw	47
   990   000906  EFE2  F005         	goto	l96
   991   00090A                     l105:
   992                           
   993                           ;Lab06.c: 154:     RB0 = 1; RB1 = 0; RB2 = 1; RB3 = 1;
   994   00090A  8081               	bsf	3969,0,c	;volatile
   995   00090C  9281               	bcf	3969,1,c	;volatile
   996   00090E  8481               	bsf	3969,2,c	;volatile
   997   000910  8681               	bsf	3969,3,c	;volatile
   998                           
   999                           ;Lab06.c: 155:     if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB4==0); return '4'; }
  1000   000912  B881               	btfsc	3969,4,c	;volatile
  1001   000914  EF8E  F004         	goto	u111
  1002   000918  EF90  F004         	goto	u110
  1003   00091C                     u111:
  1004   00091C  EFA5  F004         	goto	l109
  1005   000920                     u110:
  1006   000920  0E03               	movlw	3
  1007   000922  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1008   000924  0E8A               	movlw	138
  1009   000926  6E01               	movwf	??_keypad_scanner^0,c
  1010   000928  0E56               	movlw	86
  1011   00092A                     u1197:
  1012   00092A  2EE8               	decfsz	wreg,f,c
  1013   00092C  D7FE               	bra	u1197
  1014   00092E  2E01               	decfsz	??_keypad_scanner^0,f,c
  1015   000930  D7FC               	bra	u1197
  1016   000932  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1017   000934  D7FA               	bra	u1197
  1018   000936                     l110:
  1019   000936  A881               	btfss	3969,4,c	;volatile
  1020   000938  EFA0  F004         	goto	u121
  1021   00093C  EFA2  F004         	goto	u120
  1022   000940                     u121:
  1023   000940  EF9B  F004         	goto	l110
  1024   000944                     u120:
  1025   000944  0E34               	movlw	52
  1026   000946  EFE2  F005         	goto	l96
  1027   00094A                     l109:
  1028                           
  1029                           ;Lab06.c: 156:     if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB5==0); return '5'; }
  1030   00094A  BA81               	btfsc	3969,5,c	;volatile
  1031   00094C  EFAA  F004         	goto	u131
  1032   000950  EFAC  F004         	goto	u130
  1033   000954                     u131:
  1034   000954  EFC1  F004         	goto	l113
  1035   000958                     u130:
  1036   000958  0E03               	movlw	3
  1037   00095A  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1038   00095C  0E8A               	movlw	138
  1039   00095E  6E01               	movwf	??_keypad_scanner^0,c
  1040   000960  0E56               	movlw	86
  1041   000962                     u1207:
  1042   000962  2EE8               	decfsz	wreg,f,c
  1043   000964  D7FE               	bra	u1207
  1044   000966  2E01               	decfsz	??_keypad_scanner^0,f,c
  1045   000968  D7FC               	bra	u1207
  1046   00096A  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1047   00096C  D7FA               	bra	u1207
  1048   00096E                     l114:
  1049   00096E  AA81               	btfss	3969,5,c	;volatile
  1050   000970  EFBC  F004         	goto	u141
  1051   000974  EFBE  F004         	goto	u140
  1052   000978                     u141:
  1053   000978  EFB7  F004         	goto	l114
  1054   00097C                     u140:
  1055   00097C  0E35               	movlw	53
  1056   00097E  EFE2  F005         	goto	l96
  1057   000982                     l113:
  1058                           
  1059                           ;Lab06.c: 157:     if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB6==0); return '6'; }
  1060   000982  BC81               	btfsc	3969,6,c	;volatile
  1061   000984  EFC6  F004         	goto	u151
  1062   000988  EFC8  F004         	goto	u150
  1063   00098C                     u151:
  1064   00098C  EFDD  F004         	goto	l117
  1065   000990                     u150:
  1066   000990  0E03               	movlw	3
  1067   000992  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1068   000994  0E8A               	movlw	138
  1069   000996  6E01               	movwf	??_keypad_scanner^0,c
  1070   000998  0E56               	movlw	86
  1071   00099A                     u1217:
  1072   00099A  2EE8               	decfsz	wreg,f,c
  1073   00099C  D7FE               	bra	u1217
  1074   00099E  2E01               	decfsz	??_keypad_scanner^0,f,c
  1075   0009A0  D7FC               	bra	u1217
  1076   0009A2  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1077   0009A4  D7FA               	bra	u1217
  1078   0009A6                     l118:
  1079   0009A6  AC81               	btfss	3969,6,c	;volatile
  1080   0009A8  EFD8  F004         	goto	u161
  1081   0009AC  EFDA  F004         	goto	u160
  1082   0009B0                     u161:
  1083   0009B0  EFD3  F004         	goto	l118
  1084   0009B4                     u160:
  1085   0009B4  0E36               	movlw	54
  1086   0009B6  EFE2  F005         	goto	l96
  1087   0009BA                     l117:
  1088                           
  1089                           ;Lab06.c: 158:     if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB7==0); return '*'; }
  1090   0009BA  BE81               	btfsc	3969,7,c	;volatile
  1091   0009BC  EFE2  F004         	goto	u171
  1092   0009C0  EFE4  F004         	goto	u170
  1093   0009C4                     u171:
  1094   0009C4  EFF9  F004         	goto	l121
  1095   0009C8                     u170:
  1096   0009C8  0E03               	movlw	3
  1097   0009CA  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1098   0009CC  0E8A               	movlw	138
  1099   0009CE  6E01               	movwf	??_keypad_scanner^0,c
  1100   0009D0  0E56               	movlw	86
  1101   0009D2                     u1227:
  1102   0009D2  2EE8               	decfsz	wreg,f,c
  1103   0009D4  D7FE               	bra	u1227
  1104   0009D6  2E01               	decfsz	??_keypad_scanner^0,f,c
  1105   0009D8  D7FC               	bra	u1227
  1106   0009DA  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1107   0009DC  D7FA               	bra	u1227
  1108   0009DE                     l122:
  1109   0009DE  AE81               	btfss	3969,7,c	;volatile
  1110   0009E0  EFF4  F004         	goto	u181
  1111   0009E4  EFF6  F004         	goto	u180
  1112   0009E8                     u181:
  1113   0009E8  EFEF  F004         	goto	l122
  1114   0009EC                     u180:
  1115   0009EC  0E2A               	movlw	42
  1116   0009EE  EFE2  F005         	goto	l96
  1117   0009F2                     l121:
  1118                           
  1119                           ;Lab06.c: 159:     RB0 = 1; RB1 = 1; RB2 = 0; RB3 = 1;
  1120   0009F2  8081               	bsf	3969,0,c	;volatile
  1121   0009F4  8281               	bsf	3969,1,c	;volatile
  1122   0009F6  9481               	bcf	3969,2,c	;volatile
  1123   0009F8  8681               	bsf	3969,3,c	;volatile
  1124                           
  1125                           ;Lab06.c: 160:     if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB4==0); return '1'; }
  1126   0009FA  B881               	btfsc	3969,4,c	;volatile
  1127   0009FC  EF02  F005         	goto	u191
  1128   000A00  EF04  F005         	goto	u190
  1129   000A04                     u191:
  1130   000A04  EF19  F005         	goto	l125
  1131   000A08                     u190:
  1132   000A08  0E03               	movlw	3
  1133   000A0A  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1134   000A0C  0E8A               	movlw	138
  1135   000A0E  6E01               	movwf	??_keypad_scanner^0,c
  1136   000A10  0E56               	movlw	86
  1137   000A12                     u1237:
  1138   000A12  2EE8               	decfsz	wreg,f,c
  1139   000A14  D7FE               	bra	u1237
  1140   000A16  2E01               	decfsz	??_keypad_scanner^0,f,c
  1141   000A18  D7FC               	bra	u1237
  1142   000A1A  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1143   000A1C  D7FA               	bra	u1237
  1144   000A1E                     l126:
  1145   000A1E  A881               	btfss	3969,4,c	;volatile
  1146   000A20  EF14  F005         	goto	u201
  1147   000A24  EF16  F005         	goto	u200
  1148   000A28                     u201:
  1149   000A28  EF0F  F005         	goto	l126
  1150   000A2C                     u200:
  1151   000A2C  0E31               	movlw	49
  1152   000A2E  EFE2  F005         	goto	l96
  1153   000A32                     l125:
  1154                           
  1155                           ;Lab06.c: 161:     if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB5==0); return '2'; }
  1156   000A32  BA81               	btfsc	3969,5,c	;volatile
  1157   000A34  EF1E  F005         	goto	u211
  1158   000A38  EF20  F005         	goto	u210
  1159   000A3C                     u211:
  1160   000A3C  EF35  F005         	goto	l129
  1161   000A40                     u210:
  1162   000A40  0E03               	movlw	3
  1163   000A42  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1164   000A44  0E8A               	movlw	138
  1165   000A46  6E01               	movwf	??_keypad_scanner^0,c
  1166   000A48  0E56               	movlw	86
  1167   000A4A                     u1247:
  1168   000A4A  2EE8               	decfsz	wreg,f,c
  1169   000A4C  D7FE               	bra	u1247
  1170   000A4E  2E01               	decfsz	??_keypad_scanner^0,f,c
  1171   000A50  D7FC               	bra	u1247
  1172   000A52  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1173   000A54  D7FA               	bra	u1247
  1174   000A56                     l130:
  1175   000A56  AA81               	btfss	3969,5,c	;volatile
  1176   000A58  EF30  F005         	goto	u221
  1177   000A5C  EF32  F005         	goto	u220
  1178   000A60                     u221:
  1179   000A60  EF2B  F005         	goto	l130
  1180   000A64                     u220:
  1181   000A64  0E32               	movlw	50
  1182   000A66  EFE2  F005         	goto	l96
  1183   000A6A                     l129:
  1184                           
  1185                           ;Lab06.c: 162:     if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB6==0); return '3'; }
  1186   000A6A  BC81               	btfsc	3969,6,c	;volatile
  1187   000A6C  EF3A  F005         	goto	u231
  1188   000A70  EF3C  F005         	goto	u230
  1189   000A74                     u231:
  1190   000A74  EF51  F005         	goto	l133
  1191   000A78                     u230:
  1192   000A78  0E03               	movlw	3
  1193   000A7A  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1194   000A7C  0E8A               	movlw	138
  1195   000A7E  6E01               	movwf	??_keypad_scanner^0,c
  1196   000A80  0E56               	movlw	86
  1197   000A82                     u1257:
  1198   000A82  2EE8               	decfsz	wreg,f,c
  1199   000A84  D7FE               	bra	u1257
  1200   000A86  2E01               	decfsz	??_keypad_scanner^0,f,c
  1201   000A88  D7FC               	bra	u1257
  1202   000A8A  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1203   000A8C  D7FA               	bra	u1257
  1204   000A8E                     l134:
  1205   000A8E  AC81               	btfss	3969,6,c	;volatile
  1206   000A90  EF4C  F005         	goto	u241
  1207   000A94  EF4E  F005         	goto	u240
  1208   000A98                     u241:
  1209   000A98  EF47  F005         	goto	l134
  1210   000A9C                     u240:
  1211   000A9C  0E33               	movlw	51
  1212   000A9E  EFE2  F005         	goto	l96
  1213   000AA2                     l133:
  1214                           
  1215                           ;Lab06.c: 163:     if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB7==0); return '-'; }
  1216   000AA2  BE81               	btfsc	3969,7,c	;volatile
  1217   000AA4  EF56  F005         	goto	u251
  1218   000AA8  EF58  F005         	goto	u250
  1219   000AAC                     u251:
  1220   000AAC  EF6D  F005         	goto	l137
  1221   000AB0                     u250:
  1222   000AB0  0E03               	movlw	3
  1223   000AB2  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1224   000AB4  0E8A               	movlw	138
  1225   000AB6  6E01               	movwf	??_keypad_scanner^0,c
  1226   000AB8  0E56               	movlw	86
  1227   000ABA                     u1267:
  1228   000ABA  2EE8               	decfsz	wreg,f,c
  1229   000ABC  D7FE               	bra	u1267
  1230   000ABE  2E01               	decfsz	??_keypad_scanner^0,f,c
  1231   000AC0  D7FC               	bra	u1267
  1232   000AC2  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1233   000AC4  D7FA               	bra	u1267
  1234   000AC6                     l138:
  1235   000AC6  AE81               	btfss	3969,7,c	;volatile
  1236   000AC8  EF68  F005         	goto	u261
  1237   000ACC  EF6A  F005         	goto	u260
  1238   000AD0                     u261:
  1239   000AD0  EF63  F005         	goto	l138
  1240   000AD4                     u260:
  1241   000AD4  0E2D               	movlw	45
  1242   000AD6  EFE2  F005         	goto	l96
  1243   000ADA                     l137:
  1244                           
  1245                           ;Lab06.c: 164:     RB0 = 1; RB1 = 1; RB2 = 1; RB3 = 0;
  1246   000ADA  8081               	bsf	3969,0,c	;volatile
  1247   000ADC  8281               	bsf	3969,1,c	;volatile
  1248   000ADE  8481               	bsf	3969,2,c	;volatile
  1249   000AE0  9681               	bcf	3969,3,c	;volatile
  1250                           
  1251                           ;Lab06.c: 165:     if (RB4 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB4==0); return 'c'; }
  1252   000AE2  B881               	btfsc	3969,4,c	;volatile
  1253   000AE4  EF76  F005         	goto	u271
  1254   000AE8  EF78  F005         	goto	u270
  1255   000AEC                     u271:
  1256   000AEC  EF8D  F005         	goto	l141
  1257   000AF0                     u270:
  1258   000AF0  0E03               	movlw	3
  1259   000AF2  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1260   000AF4  0E8A               	movlw	138
  1261   000AF6  6E01               	movwf	??_keypad_scanner^0,c
  1262   000AF8  0E56               	movlw	86
  1263   000AFA                     u1277:
  1264   000AFA  2EE8               	decfsz	wreg,f,c
  1265   000AFC  D7FE               	bra	u1277
  1266   000AFE  2E01               	decfsz	??_keypad_scanner^0,f,c
  1267   000B00  D7FC               	bra	u1277
  1268   000B02  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1269   000B04  D7FA               	bra	u1277
  1270   000B06                     l142:
  1271   000B06  A881               	btfss	3969,4,c	;volatile
  1272   000B08  EF88  F005         	goto	u281
  1273   000B0C  EF8A  F005         	goto	u280
  1274   000B10                     u281:
  1275   000B10  EF83  F005         	goto	l142
  1276   000B14                     u280:
  1277   000B14  0E63               	movlw	99
  1278   000B16  EFE2  F005         	goto	l96
  1279   000B1A                     l141:
  1280                           
  1281                           ;Lab06.c: 166:     if (RB5 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB5==0); return '0'; }
  1282   000B1A  BA81               	btfsc	3969,5,c	;volatile
  1283   000B1C  EF92  F005         	goto	u291
  1284   000B20  EF94  F005         	goto	u290
  1285   000B24                     u291:
  1286   000B24  EFA9  F005         	goto	l145
  1287   000B28                     u290:
  1288   000B28  0E03               	movlw	3
  1289   000B2A  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1290   000B2C  0E8A               	movlw	138
  1291   000B2E  6E01               	movwf	??_keypad_scanner^0,c
  1292   000B30  0E56               	movlw	86
  1293   000B32                     u1287:
  1294   000B32  2EE8               	decfsz	wreg,f,c
  1295   000B34  D7FE               	bra	u1287
  1296   000B36  2E01               	decfsz	??_keypad_scanner^0,f,c
  1297   000B38  D7FC               	bra	u1287
  1298   000B3A  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1299   000B3C  D7FA               	bra	u1287
  1300   000B3E                     l146:
  1301   000B3E  AA81               	btfss	3969,5,c	;volatile
  1302   000B40  EFA4  F005         	goto	u301
  1303   000B44  EFA6  F005         	goto	u300
  1304   000B48                     u301:
  1305   000B48  EF9F  F005         	goto	l146
  1306   000B4C                     u300:
  1307   000B4C  0E30               	movlw	48
  1308   000B4E  EFE2  F005         	goto	l96
  1309   000B52                     l145:
  1310                           
  1311                           ;Lab06.c: 167:     if (RB6 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB6==0); return '='; }
  1312   000B52  BC81               	btfsc	3969,6,c	;volatile
  1313   000B54  EFAE  F005         	goto	u311
  1314   000B58  EFB0  F005         	goto	u310
  1315   000B5C                     u311:
  1316   000B5C  EFC5  F005         	goto	l149
  1317   000B60                     u310:
  1318   000B60  0E03               	movlw	3
  1319   000B62  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1320   000B64  0E8A               	movlw	138
  1321   000B66  6E01               	movwf	??_keypad_scanner^0,c
  1322   000B68  0E56               	movlw	86
  1323   000B6A                     u1297:
  1324   000B6A  2EE8               	decfsz	wreg,f,c
  1325   000B6C  D7FE               	bra	u1297
  1326   000B6E  2E01               	decfsz	??_keypad_scanner^0,f,c
  1327   000B70  D7FC               	bra	u1297
  1328   000B72  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1329   000B74  D7FA               	bra	u1297
  1330   000B76                     l150:
  1331   000B76  AC81               	btfss	3969,6,c	;volatile
  1332   000B78  EFC0  F005         	goto	u321
  1333   000B7C  EFC2  F005         	goto	u320
  1334   000B80                     u321:
  1335   000B80  EFBB  F005         	goto	l150
  1336   000B84                     u320:
  1337   000B84  0E3D               	movlw	61
  1338   000B86  EFE2  F005         	goto	l96
  1339   000B8A                     l149:
  1340                           
  1341                           ;Lab06.c: 168:     if (RB7 == 0) { _delay((unsigned long)((100)*(20000000/4000.0))); whi
      +                          le (RB7==0); return '+'; }
  1342   000B8A  BE81               	btfsc	3969,7,c	;volatile
  1343   000B8C  EFCA  F005         	goto	u331
  1344   000B90  EFCC  F005         	goto	u330
  1345   000B94                     u331:
  1346   000B94  EFE1  F005         	goto	l1034
  1347   000B98                     u330:
  1348   000B98  0E03               	movlw	3
  1349   000B9A  6E02               	movwf	(??_keypad_scanner+1)^0,c
  1350   000B9C  0E8A               	movlw	138
  1351   000B9E  6E01               	movwf	??_keypad_scanner^0,c
  1352   000BA0  0E56               	movlw	86
  1353   000BA2                     u1307:
  1354   000BA2  2EE8               	decfsz	wreg,f,c
  1355   000BA4  D7FE               	bra	u1307
  1356   000BA6  2E01               	decfsz	??_keypad_scanner^0,f,c
  1357   000BA8  D7FC               	bra	u1307
  1358   000BAA  2E02               	decfsz	(??_keypad_scanner+1)^0,f,c
  1359   000BAC  D7FA               	bra	u1307
  1360   000BAE                     l154:
  1361   000BAE  AE81               	btfss	3969,7,c	;volatile
  1362   000BB0  EFDC  F005         	goto	u341
  1363   000BB4  EFDE  F005         	goto	u340
  1364   000BB8                     u341:
  1365   000BB8  EFD7  F005         	goto	l154
  1366   000BBC                     u340:
  1367   000BBC  0E2B               	movlw	43
  1368   000BBE  EFE2  F005         	goto	l96
  1369   000BC2                     l1034:
  1370                           
  1371                           ;Lab06.c: 169:     return 'n';
  1372   000BC2  0E6E               	movlw	110
  1373   000BC4                     l96:
  1374   000BC4  0012               	return		;funcret
  1375   000BC6                     __end_of_keypad_scanner:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _result *****************
  1379 ;; Defined at:
  1380 ;;		line 253 in file "Lab06.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  numb            2   10[COMRAM] int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  TenthDigit      1   12[COMRAM] unsigned char 
  1385 ;;  UnitDigit       1    0        unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        3 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 3
  1402 ;; This function calls:
  1403 ;;		_LCDGoto
  1404 ;;		_LCDPutChar
  1405 ;;		_num2char
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text3
  1412   001274                     __ptext3:
  1413                           	callstack 0
  1414   001274                     _result:
  1415                           	callstack 27
  1416   001274                     
  1417                           ;Lab06.c: 255:  unsigned char TenthDigit = 0;
  1418   001274  0E00               	movlw	0
  1419   001276  6E0D               	movwf	result@TenthDigit^0,c
  1420   001278                     
  1421                           ;Lab06.c: 257:  if(numb<0)
  1422   001278  BE0C               	btfsc	(result@numb+1)^0,7,c
  1423   00127A  EF43  F009         	goto	u790
  1424   00127E  EF41  F009         	goto	u791
  1425   001282                     u791:
  1426   001282  EF4F  F009         	goto	l1482
  1427   001286                     u790:
  1428   001286                     
  1429                           ;Lab06.c: 258:  {;Lab06.c: 259:  LCDGoto(14,1);
  1430   001286  0E01               	movlw	1
  1431   001288  6E05               	movwf	LCDGoto@ln^0,c
  1432   00128A  0E0E               	movlw	14
  1433   00128C  ECD9  F008         	call	_LCDGoto
  1434   001290                     
  1435                           ;Lab06.c: 260:         numb = -1*numb;
  1436   001290  6C0B               	negf	result@numb^0,c
  1437   001292  1E0C               	comf	(result@numb+1)^0,f,c
  1438   001294  B0D8               	btfsc	status,0,c
  1439   001296  2A0C               	incf	(result@numb+1)^0,f,c
  1440   001298                     
  1441                           ;Lab06.c: 261:   LCDPutChar('-');
  1442   001298  0E2D               	movlw	45
  1443   00129A  ECB4  F009         	call	_LCDPutChar
  1444   00129E                     l1482:
  1445                           
  1446                           ;Lab06.c: 263:     LCDGoto(15,1);
  1447   00129E  0E01               	movlw	1
  1448   0012A0  6E05               	movwf	LCDGoto@ln^0,c
  1449   0012A2  0E0F               	movlw	15
  1450   0012A4  ECD9  F008         	call	_LCDGoto
  1451   0012A8                     
  1452                           ;Lab06.c: 264:     LCDPutChar(num2char(numb));
  1453   0012A8  C00B  F001         	movff	result@numb,num2char@ch
  1454   0012AC  C00C  F002         	movff	result@numb+1,num2char@ch+1
  1455   0012B0  EC11  F008         	call	_num2char	;wreg free
  1456   0012B4  5001               	movf	?_num2char^0,w,c
  1457   0012B6  ECB4  F009         	call	_LCDPutChar
  1458   0012BA  0012               	return		;funcret
  1459   0012BC                     __end_of_result:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function _num2char *****************
  1463 ;; Defined at:
  1464 ;;		line 237 in file "Lab06.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  ch              2    0[COMRAM] int 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  num             1    4[COMRAM] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2    0[COMRAM] int 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1478 ;;      Params:         2       0       0       0       0       0       0       0       0
  1479 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1480 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1481 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1482 ;;Total ram usage:        5 bytes
  1483 ;; Hardware stack levels used: 1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_result
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text4
  1492   001022                     __ptext4:
  1493                           	callstack 0
  1494   001022                     _num2char:
  1495                           	callstack 29
  1496   001022                     
  1497                           ;Lab06.c: 238:  char num = 0;
  1498   001022  0E00               	movlw	0
  1499   001024  6E05               	movwf	num2char@num^0,c
  1500                           
  1501                           ;Lab06.c: 239:  switch(ch){
  1502   001026  EF3D  F008         	goto	l1412
  1503   00102A                     l1390:
  1504   00102A  0E30               	movlw	48
  1505   00102C  6E05               	movwf	num2char@num^0,c
  1506   00102E  EF73  F008         	goto	l207
  1507   001032                     l1392:
  1508   001032  0E31               	movlw	49
  1509   001034  6E05               	movwf	num2char@num^0,c
  1510   001036  EF73  F008         	goto	l207
  1511   00103A                     l1394:
  1512   00103A  0E32               	movlw	50
  1513   00103C  6E05               	movwf	num2char@num^0,c
  1514   00103E  EF73  F008         	goto	l207
  1515   001042                     l1396:
  1516   001042  0E33               	movlw	51
  1517   001044  6E05               	movwf	num2char@num^0,c
  1518   001046  EF73  F008         	goto	l207
  1519   00104A                     l1398:
  1520   00104A  0E34               	movlw	52
  1521   00104C  6E05               	movwf	num2char@num^0,c
  1522   00104E  EF73  F008         	goto	l207
  1523   001052                     l1400:
  1524   001052  0E35               	movlw	53
  1525   001054  6E05               	movwf	num2char@num^0,c
  1526   001056  EF73  F008         	goto	l207
  1527   00105A                     l1402:
  1528   00105A  0E36               	movlw	54
  1529   00105C  6E05               	movwf	num2char@num^0,c
  1530   00105E  EF73  F008         	goto	l207
  1531   001062                     l1404:
  1532   001062  0E37               	movlw	55
  1533   001064  6E05               	movwf	num2char@num^0,c
  1534   001066  EF73  F008         	goto	l207
  1535   00106A                     l1406:
  1536   00106A  0E38               	movlw	56
  1537   00106C  6E05               	movwf	num2char@num^0,c
  1538   00106E  EF73  F008         	goto	l207
  1539   001072                     l1408:
  1540   001072  0E39               	movlw	57
  1541   001074  6E05               	movwf	num2char@num^0,c
  1542   001076  EF73  F008         	goto	l207
  1543   00107A                     l1412:
  1544   00107A  C001  F003         	movff	num2char@ch,??_num2char
  1545   00107E  C002  F004         	movff	num2char@ch+1,??_num2char+1
  1546                           
  1547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1548                           ; Switch size 1, requested type "simple"
  1549                           ; Number of cases is 1, Range of values is 0 to 0
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte            4     3 (average)
  1553                           ;	Chosen strategy is simple_byte
  1554   001082  5004               	movf	(??_num2char+1)^0,w,c
  1555   001084  0A00               	xorlw	0	; case 0
  1556   001086  B4D8               	btfsc	status,2,c
  1557   001088  EF48  F008         	goto	l1662
  1558   00108C  EF73  F008         	goto	l207
  1559   001090                     l1662:
  1560                           
  1561                           ; Switch size 1, requested type "simple"
  1562                           ; Number of cases is 10, Range of values is 0 to 9
  1563                           ; switch strategies available:
  1564                           ; Name         Instructions Cycles
  1565                           ; simple_byte           31    16 (average)
  1566                           ;	Chosen strategy is simple_byte
  1567   001090  5003               	movf	??_num2char^0,w,c
  1568   001092  0A00               	xorlw	0	; case 0
  1569   001094  B4D8               	btfsc	status,2,c
  1570   001096  EF15  F008         	goto	l1390
  1571   00109A  0A01               	xorlw	1	; case 1
  1572   00109C  B4D8               	btfsc	status,2,c
  1573   00109E  EF19  F008         	goto	l1392
  1574   0010A2  0A03               	xorlw	3	; case 2
  1575   0010A4  B4D8               	btfsc	status,2,c
  1576   0010A6  EF1D  F008         	goto	l1394
  1577   0010AA  0A01               	xorlw	1	; case 3
  1578   0010AC  B4D8               	btfsc	status,2,c
  1579   0010AE  EF21  F008         	goto	l1396
  1580   0010B2  0A07               	xorlw	7	; case 4
  1581   0010B4  B4D8               	btfsc	status,2,c
  1582   0010B6  EF25  F008         	goto	l1398
  1583   0010BA  0A01               	xorlw	1	; case 5
  1584   0010BC  B4D8               	btfsc	status,2,c
  1585   0010BE  EF29  F008         	goto	l1400
  1586   0010C2  0A03               	xorlw	3	; case 6
  1587   0010C4  B4D8               	btfsc	status,2,c
  1588   0010C6  EF2D  F008         	goto	l1402
  1589   0010CA  0A01               	xorlw	1	; case 7
  1590   0010CC  B4D8               	btfsc	status,2,c
  1591   0010CE  EF31  F008         	goto	l1404
  1592   0010D2  0A0F               	xorlw	15	; case 8
  1593   0010D4  B4D8               	btfsc	status,2,c
  1594   0010D6  EF35  F008         	goto	l1406
  1595   0010DA  0A01               	xorlw	1	; case 9
  1596   0010DC  B4D8               	btfsc	status,2,c
  1597   0010DE  EF39  F008         	goto	l1408
  1598   0010E2  EF73  F008         	goto	l207
  1599   0010E6                     l207:
  1600                           
  1601                           ;Lab06.c: 251:     return num;
  1602   0010E6  C005  F001         	movff	num2char@num,?_num2char
  1603   0010EA  6A02               	clrf	(?_num2char+1)^0,c
  1604   0010EC  0012               	return		;funcret
  1605   0010EE                     __end_of_num2char:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _printERROR *****************
  1609 ;; Defined at:
  1610 ;;		line 275 in file "Lab06.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1626 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1627 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1628 ;;Total ram usage:        2 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 3
  1631 ;; This function calls:
  1632 ;;		_LCDGoto
  1633 ;;		_LCDPutCmd
  1634 ;;		_LCDPutStr
  1635 ;; This function is called by:
  1636 ;;		_main
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text5
  1641   001332                     __ptext5:
  1642                           	callstack 0
  1643   001332                     _printERROR:
  1644                           	callstack 27
  1645   001332                     
  1646                           ;Lab06.c: 276:     LCDGoto(1,1);
  1647   001332  0E01               	movlw	1
  1648   001334  6E05               	movwf	LCDGoto@ln^0,c
  1649   001336  0E01               	movlw	1
  1650   001338  ECD9  F008         	call	_LCDGoto
  1651   00133C                     
  1652                           ;Lab06.c: 277:     LCDPutStr("Wrong Function");
  1653   00133C  0E11               	movlw	low STR_2
  1654   00133E  6E05               	movwf	LCDPutStr@str^0,c
  1655   001340  0E08               	movlw	high STR_2
  1656   001342  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1657   001344  EC12  F009         	call	_LCDPutStr	;wreg free
  1658   001348                     
  1659                           ;Lab06.c: 278:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1660   001348  0E0D               	movlw	13
  1661   00134A  6E0C               	movwf	(??_printERROR+1)^0,c
  1662   00134C  0EAF               	movlw	175
  1663   00134E  6E0B               	movwf	??_printERROR^0,c
  1664   001350  0EB6               	movlw	182
  1665   001352                     u1317:
  1666   001352  2EE8               	decfsz	wreg,f,c
  1667   001354  D7FE               	bra	u1317
  1668   001356  2E0B               	decfsz	??_printERROR^0,f,c
  1669   001358  D7FC               	bra	u1317
  1670   00135A  2E0C               	decfsz	(??_printERROR+1)^0,f,c
  1671   00135C  D7FA               	bra	u1317
  1672   00135E  D000               	nop2	
  1673   001360                     
  1674                           ;Lab06.c: 279:     LCDPutCmd(0x01);
  1675   001360  0E01               	movlw	1
  1676   001362  EC5E  F009         	call	_LCDPutCmd
  1677   001366  0012               	return		;funcret
  1678   001368                     __end_of_printERROR:
  1679                           	callstack 0
  1680                           
  1681 ;; *************** function _LCDPutStr *****************
  1682 ;; Defined at:
  1683 ;;		line 210 in file "Lab06.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  str             2    4[COMRAM] PTR const unsigned char 
  1686 ;;		 -> STR_2(15), STR_1(16), 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  i               1    8[COMRAM] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1698 ;;      Params:         2       0       0       0       0       0       0       0       0
  1699 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1700 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1701 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1702 ;;Total ram usage:        5 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 2
  1705 ;; This function calls:
  1706 ;;		_LCDPutChar
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;;		_printERROR
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text6
  1714   001224                     __ptext6:
  1715                           	callstack 0
  1716   001224                     _LCDPutStr:
  1717                           	callstack 27
  1718   001224                     
  1719                           ;Lab06.c: 211:     char i=0;
  1720   001224  0E00               	movlw	0
  1721   001226  6E09               	movwf	LCDPutStr@i^0,c
  1722                           
  1723                           ;Lab06.c: 212:     while (str[i]){
  1724   001228  EF25  F009         	goto	l1372
  1725   00122C                     l1368:
  1726                           
  1727                           ;Lab06.c: 213:     LCDPutChar(str[i++]);
  1728   00122C  5009               	movf	LCDPutStr@i^0,w,c
  1729   00122E  2405               	addwf	LCDPutStr@str^0,w,c
  1730   001230  6E07               	movwf	??_LCDPutStr^0,c
  1731   001232  0E00               	movlw	0
  1732   001234  2006               	addwfc	(LCDPutStr@str+1)^0,w,c
  1733   001236  6E08               	movwf	(??_LCDPutStr+1)^0,c
  1734   001238  C007  FFF6         	movff	??_LCDPutStr,tblptrl
  1735   00123C  C008  FFF7         	movff	??_LCDPutStr+1,tblptrh
  1736   001240                     	if	0	;tblptru may be non-zero
  1737   001240                     	endif
  1738   001240                     	if	0	;tblptru may be non-zero
  1739   001240                     	endif
  1740   001240  0008               	tblrd		*
  1741   001242  50F5               	movf	tablat,w,c
  1742   001244  ECB4  F009         	call	_LCDPutChar
  1743   001248  2A09               	incf	LCDPutStr@i^0,f,c
  1744   00124A                     l1372:
  1745                           
  1746                           ;Lab06.c: 212:     while (str[i]){
  1747   00124A  5009               	movf	LCDPutStr@i^0,w,c
  1748   00124C  2405               	addwf	LCDPutStr@str^0,w,c
  1749   00124E  6E07               	movwf	??_LCDPutStr^0,c
  1750   001250  0E00               	movlw	0
  1751   001252  2006               	addwfc	(LCDPutStr@str+1)^0,w,c
  1752   001254  6E08               	movwf	(??_LCDPutStr+1)^0,c
  1753   001256  C007  FFF6         	movff	??_LCDPutStr,tblptrl
  1754   00125A  C008  FFF7         	movff	??_LCDPutStr+1,tblptrh
  1755   00125E                     	if	0	;tblptru may be non-zero
  1756   00125E                     	endif
  1757   00125E                     	if	0	;tblptru may be non-zero
  1758   00125E                     	endif
  1759   00125E  0008               	tblrd		*
  1760   001260  50F5               	movf	tablat,w,c
  1761   001262  0900               	iorlw	0
  1762   001264  A4D8               	btfss	status,2,c
  1763   001266  EF37  F009         	goto	u751
  1764   00126A  EF39  F009         	goto	u750
  1765   00126E                     u751:
  1766   00126E  EF16  F009         	goto	l1368
  1767   001272                     u750:
  1768   001272  0012               	return		;funcret
  1769   001274                     __end_of_LCDPutStr:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _LCDPutChar *****************
  1773 ;; Defined at:
  1774 ;;		line 197 in file "Lab06.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  ch              1    wreg     unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  ch              1    3[COMRAM] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0
  1789 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1790 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1791 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1792 ;;Total ram usage:        2 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 1
  1795 ;; This function calls:
  1796 ;;		_LCDWriteNibble
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;;		_LCDPutStr
  1800 ;;		_result
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text7
  1805   001368                     __ptext7:
  1806                           	callstack 0
  1807   001368                     _LCDPutChar:
  1808                           	callstack 28
  1809                           
  1810                           ;incstack = 0
  1811                           ;LCDPutChar@ch stored from wreg
  1812   001368  6E04               	movwf	LCDPutChar@ch^0,c
  1813   00136A                     
  1814                           ;Lab06.c: 198:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1815   00136A  0E21               	movlw	33
  1816   00136C  6E03               	movwf	??_LCDPutChar^0,c
  1817   00136E  0E76               	movlw	118
  1818   001370                     u1327:
  1819   001370  2EE8               	decfsz	wreg,f,c
  1820   001372  D7FE               	bra	u1327
  1821   001374  2E03               	decfsz	??_LCDPutChar^0,f,c
  1822   001376  D7FC               	bra	u1327
  1823   001378  D000               	nop2	
  1824   00137A                     
  1825                           ;Lab06.c: 199:     LCDWriteNibble(ch,1);
  1826   00137A  0E01               	movlw	1
  1827   00137C  6E01               	movwf	LCDWriteNibble@rs^0,c
  1828   00137E  5004               	movf	LCDPutChar@ch^0,w,c
  1829   001380  ECCB  F009         	call	_LCDWriteNibble
  1830   001384                     
  1831                           ;Lab06.c: 200:     ch = (ch << 4);
  1832   001384  3804               	swapf	LCDPutChar@ch^0,w,c
  1833   001386  0BF0               	andlw	240
  1834   001388  6E04               	movwf	LCDPutChar@ch^0,c
  1835   00138A                     
  1836                           ;Lab06.c: 201:     LCDWriteNibble(ch,1);
  1837   00138A  0E01               	movlw	1
  1838   00138C  6E01               	movwf	LCDWriteNibble@rs^0,c
  1839   00138E  5004               	movf	LCDPutChar@ch^0,w,c
  1840   001390  ECCB  F009         	call	_LCDWriteNibble
  1841   001394  0012               	return		;funcret
  1842   001396                     __end_of_LCDPutChar:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _LCDGoto *****************
  1846 ;; Defined at:
  1847 ;;		line 216 in file "Lab06.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  pos             1    wreg     unsigned char 
  1850 ;;  ln              1    4[COMRAM] unsigned char 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  pos             1    9[COMRAM] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         1       0       0       0       0       0       0       0       0
  1863 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1864 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1865 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:        6 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 2
  1869 ;; This function calls:
  1870 ;;		_LCDPutCmd
  1871 ;; This function is called by:
  1872 ;;		_result
  1873 ;;		_printERROR
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text8
  1878   0011B2                     __ptext8:
  1879                           	callstack 0
  1880   0011B2                     _LCDGoto:
  1881                           	callstack 27
  1882                           
  1883                           ;incstack = 0
  1884                           ;LCDGoto@pos stored from wreg
  1885   0011B2  6E0A               	movwf	LCDGoto@pos^0,c
  1886   0011B4                     
  1887                           ;Lab06.c: 217:     if ((ln > (2 -1)) || (pos > (16 -1))) return;
  1888   0011B4  0E02               	movlw	2
  1889   0011B6  6005               	cpfslt	LCDGoto@ln^0,c
  1890   0011B8  EFE0  F008         	goto	u761
  1891   0011BC  EFE2  F008         	goto	u760
  1892   0011C0                     u761:
  1893   0011C0  EF11  F009         	goto	l183
  1894   0011C4                     u760:
  1895   0011C4  0E0F               	movlw	15
  1896   0011C6  640A               	cpfsgt	LCDGoto@pos^0,c
  1897   0011C8  EFE8  F008         	goto	u771
  1898   0011CC  EFEA  F008         	goto	u770
  1899   0011D0                     u771:
  1900   0011D0  EFEC  F008         	goto	l1378
  1901   0011D4                     u770:
  1902   0011D4  EF11  F009         	goto	l183
  1903   0011D8                     l1378:
  1904                           
  1905                           ;Lab06.c: 218:     LCDPutCmd((ln == 1) ? (0xc0 | pos) : (0x80 | pos));
  1906   0011D8  0405               	decf	LCDGoto@ln^0,w,c
  1907   0011DA  B4D8               	btfsc	status,2,c
  1908   0011DC  EFF2  F008         	goto	u781
  1909   0011E0  EFF4  F008         	goto	u780
  1910   0011E4                     u781:
  1911   0011E4  EFFE  F008         	goto	l1382
  1912   0011E8                     u780:
  1913   0011E8  0E80               	movlw	128
  1914   0011EA  C00A  F006         	movff	LCDGoto@pos,??_LCDGoto
  1915   0011EE  6A07               	clrf	(??_LCDGoto+1)^0,c
  1916   0011F0  1006               	iorwf	??_LCDGoto^0,w,c
  1917   0011F2  6E08               	movwf	_LCDGoto$176^0,c
  1918   0011F4  5007               	movf	(??_LCDGoto+1)^0,w,c
  1919   0011F6  6E09               	movwf	(_LCDGoto$176+1)^0,c
  1920   0011F8  EF06  F009         	goto	l1384
  1921   0011FC                     l1382:
  1922   0011FC  0EC0               	movlw	192
  1923   0011FE  C00A  F006         	movff	LCDGoto@pos,??_LCDGoto
  1924   001202  6A07               	clrf	(??_LCDGoto+1)^0,c
  1925   001204  1006               	iorwf	??_LCDGoto^0,w,c
  1926   001206  6E08               	movwf	_LCDGoto$176^0,c
  1927   001208  5007               	movf	(??_LCDGoto+1)^0,w,c
  1928   00120A  6E09               	movwf	(_LCDGoto$176+1)^0,c
  1929   00120C                     l1384:
  1930   00120C  5008               	movf	_LCDGoto$176^0,w,c
  1931   00120E  EC5E  F009         	call	_LCDPutCmd
  1932   001212                     
  1933                           ;Lab06.c: 219:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1934   001212  0E21               	movlw	33
  1935   001214  6E06               	movwf	??_LCDGoto^0,c
  1936   001216  0E76               	movlw	118
  1937   001218                     u1337:
  1938   001218  2EE8               	decfsz	wreg,f,c
  1939   00121A  D7FE               	bra	u1337
  1940   00121C  2E06               	decfsz	??_LCDGoto^0,f,c
  1941   00121E  D7FC               	bra	u1337
  1942   001220  D000               	nop2	
  1943   001222                     l183:
  1944   001222  0012               	return		;funcret
  1945   001224                     __end_of_LCDGoto:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _char2num *****************
  1949 ;; Defined at:
  1950 ;;		line 221 in file "Lab06.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  ch              1    wreg     unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  ch              1    4[COMRAM] unsigned char 
  1955 ;;  num             2    5[COMRAM] int 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2    0[COMRAM] int 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1965 ;;      Params:         2       0       0       0       0       0       0       0       0
  1966 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1967 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1968 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1969 ;;Total ram usage:        7 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text9
  1979   000F28                     __ptext9:
  1980                           	callstack 0
  1981   000F28                     _char2num:
  1982                           	callstack 30
  1983                           
  1984                           ;incstack = 0
  1985                           ;char2num@ch stored from wreg
  1986   000F28  6E05               	movwf	char2num@ch^0,c
  1987   000F2A                     
  1988                           ;Lab06.c: 222:  int num = 0;
  1989   000F2A  0E00               	movlw	0
  1990   000F2C  6E07               	movwf	(char2num@num+1)^0,c
  1991   000F2E  0E00               	movlw	0
  1992   000F30  6E06               	movwf	char2num@num^0,c
  1993                           
  1994                           ;Lab06.c: 223:  switch(ch){
  1995   000F32  EFD7  F007         	goto	l1458
  1996   000F36                     l1436:
  1997   000F36  0E00               	movlw	0
  1998   000F38  6E07               	movwf	(char2num@num+1)^0,c
  1999   000F3A  0E00               	movlw	0
  2000   000F3C  6E06               	movwf	char2num@num^0,c
  2001   000F3E  EF0C  F008         	goto	l192
  2002   000F42                     l1438:
  2003   000F42  0E00               	movlw	0
  2004   000F44  6E07               	movwf	(char2num@num+1)^0,c
  2005   000F46  0E01               	movlw	1
  2006   000F48  6E06               	movwf	char2num@num^0,c
  2007   000F4A  EF0C  F008         	goto	l192
  2008   000F4E                     l1440:
  2009   000F4E  0E00               	movlw	0
  2010   000F50  6E07               	movwf	(char2num@num+1)^0,c
  2011   000F52  0E02               	movlw	2
  2012   000F54  6E06               	movwf	char2num@num^0,c
  2013   000F56  EF0C  F008         	goto	l192
  2014   000F5A                     l1442:
  2015   000F5A  0E00               	movlw	0
  2016   000F5C  6E07               	movwf	(char2num@num+1)^0,c
  2017   000F5E  0E03               	movlw	3
  2018   000F60  6E06               	movwf	char2num@num^0,c
  2019   000F62  EF0C  F008         	goto	l192
  2020   000F66                     l1444:
  2021   000F66  0E00               	movlw	0
  2022   000F68  6E07               	movwf	(char2num@num+1)^0,c
  2023   000F6A  0E04               	movlw	4
  2024   000F6C  6E06               	movwf	char2num@num^0,c
  2025   000F6E  EF0C  F008         	goto	l192
  2026   000F72                     l1446:
  2027   000F72  0E00               	movlw	0
  2028   000F74  6E07               	movwf	(char2num@num+1)^0,c
  2029   000F76  0E05               	movlw	5
  2030   000F78  6E06               	movwf	char2num@num^0,c
  2031   000F7A  EF0C  F008         	goto	l192
  2032   000F7E                     l1448:
  2033   000F7E  0E00               	movlw	0
  2034   000F80  6E07               	movwf	(char2num@num+1)^0,c
  2035   000F82  0E06               	movlw	6
  2036   000F84  6E06               	movwf	char2num@num^0,c
  2037   000F86  EF0C  F008         	goto	l192
  2038   000F8A                     l1450:
  2039   000F8A  0E00               	movlw	0
  2040   000F8C  6E07               	movwf	(char2num@num+1)^0,c
  2041   000F8E  0E07               	movlw	7
  2042   000F90  6E06               	movwf	char2num@num^0,c
  2043   000F92  EF0C  F008         	goto	l192
  2044   000F96                     l1452:
  2045   000F96  0E00               	movlw	0
  2046   000F98  6E07               	movwf	(char2num@num+1)^0,c
  2047   000F9A  0E08               	movlw	8
  2048   000F9C  6E06               	movwf	char2num@num^0,c
  2049   000F9E  EF0C  F008         	goto	l192
  2050   000FA2                     l1454:
  2051   000FA2  0E00               	movlw	0
  2052   000FA4  6E07               	movwf	(char2num@num+1)^0,c
  2053   000FA6  0E09               	movlw	9
  2054   000FA8  6E06               	movwf	char2num@num^0,c
  2055   000FAA  EF0C  F008         	goto	l192
  2056   000FAE                     l1458:
  2057   000FAE  5005               	movf	char2num@ch^0,w,c
  2058   000FB0  6E03               	movwf	??_char2num^0,c
  2059   000FB2  6A04               	clrf	(??_char2num+1)^0,c
  2060                           
  2061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2062                           ; Switch size 1, requested type "simple"
  2063                           ; Number of cases is 1, Range of values is 0 to 0
  2064                           ; switch strategies available:
  2065                           ; Name         Instructions Cycles
  2066                           ; simple_byte            4     3 (average)
  2067                           ;	Chosen strategy is simple_byte
  2068   000FB4  5004               	movf	(??_char2num+1)^0,w,c
  2069   000FB6  0A00               	xorlw	0	; case 0
  2070   000FB8  B4D8               	btfsc	status,2,c
  2071   000FBA  EFE1  F007         	goto	l1664
  2072   000FBE  EF0C  F008         	goto	l192
  2073   000FC2                     l1664:
  2074                           
  2075                           ; Switch size 1, requested type "simple"
  2076                           ; Number of cases is 10, Range of values is 48 to 57
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte           31    16 (average)
  2080                           ;	Chosen strategy is simple_byte
  2081   000FC2  5003               	movf	??_char2num^0,w,c
  2082   000FC4  0A30               	xorlw	48	; case 48
  2083   000FC6  B4D8               	btfsc	status,2,c
  2084   000FC8  EF9B  F007         	goto	l1436
  2085   000FCC  0A01               	xorlw	1	; case 49
  2086   000FCE  B4D8               	btfsc	status,2,c
  2087   000FD0  EFA1  F007         	goto	l1438
  2088   000FD4  0A03               	xorlw	3	; case 50
  2089   000FD6  B4D8               	btfsc	status,2,c
  2090   000FD8  EFA7  F007         	goto	l1440
  2091   000FDC  0A01               	xorlw	1	; case 51
  2092   000FDE  B4D8               	btfsc	status,2,c
  2093   000FE0  EFAD  F007         	goto	l1442
  2094   000FE4  0A07               	xorlw	7	; case 52
  2095   000FE6  B4D8               	btfsc	status,2,c
  2096   000FE8  EFB3  F007         	goto	l1444
  2097   000FEC  0A01               	xorlw	1	; case 53
  2098   000FEE  B4D8               	btfsc	status,2,c
  2099   000FF0  EFB9  F007         	goto	l1446
  2100   000FF4  0A03               	xorlw	3	; case 54
  2101   000FF6  B4D8               	btfsc	status,2,c
  2102   000FF8  EFBF  F007         	goto	l1448
  2103   000FFC  0A01               	xorlw	1	; case 55
  2104   000FFE  B4D8               	btfsc	status,2,c
  2105   001000  EFC5  F007         	goto	l1450
  2106   001004  0A0F               	xorlw	15	; case 56
  2107   001006  B4D8               	btfsc	status,2,c
  2108   001008  EFCB  F007         	goto	l1452
  2109   00100C  0A01               	xorlw	1	; case 57
  2110   00100E  B4D8               	btfsc	status,2,c
  2111   001010  EFD1  F007         	goto	l1454
  2112   001014  EF0C  F008         	goto	l192
  2113   001018                     l192:
  2114                           
  2115                           ;Lab06.c: 235:     return num;
  2116   001018  C006  F001         	movff	char2num@num,?_char2num
  2117   00101C  C007  F002         	movff	char2num@num+1,?_char2num+1
  2118   001020  0012               	return		;funcret
  2119   001022                     __end_of_char2num:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function ___wmul *****************
  2123 ;; Defined at:
  2124 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  multiplier      2    0[COMRAM] unsigned int 
  2127 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  product         2    4[COMRAM] unsigned int 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  2    0[COMRAM] unsigned int 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, prodl, prodh
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2139 ;;      Params:         4       0       0       0       0       0       0       0       0
  2140 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2142 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2143 ;;Total ram usage:        6 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text10
  2153   0013C2                     __ptext10:
  2154                           	callstack 0
  2155   0013C2                     ___wmul:
  2156                           	callstack 30
  2157   0013C2  5001               	movf	___wmul@multiplier^0,w,c
  2158   0013C4  0203               	mulwf	___wmul@multiplicand^0,c
  2159   0013C6  CFF3 F005          	movff	prodl,___wmul@product
  2160   0013CA  CFF4 F006          	movff	prodh,___wmul@product+1
  2161   0013CE  5001               	movf	___wmul@multiplier^0,w,c
  2162   0013D0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2163   0013D2  50F3               	movf	243,w,c
  2164   0013D4  2606               	addwf	(___wmul@product+1)^0,f,c
  2165   0013D6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2166   0013D8  0203               	mulwf	___wmul@multiplicand^0,c
  2167   0013DA  50F3               	movf	243,w,c
  2168   0013DC  2606               	addwf	(___wmul@product+1)^0,f,c
  2169   0013DE  C005  F001         	movff	___wmul@product,?___wmul
  2170   0013E2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2171   0013E6  0012               	return		;funcret
  2172   0013E8                     __end_of___wmul:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function ___awdiv *****************
  2176 ;; Defined at:
  2177 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  dividend        2    0[COMRAM] int 
  2180 ;;  divisor         2    2[COMRAM] int 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  quotient        2    6[COMRAM] int 
  2183 ;;  sign            1    5[COMRAM] unsigned char 
  2184 ;;  counter         1    4[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  2    0[COMRAM] int 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2194 ;;      Params:         4       0       0       0       0       0       0       0       0
  2195 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2197 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:        8 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text11
  2208   0010EE                     __ptext11:
  2209                           	callstack 0
  2210   0010EE                     ___awdiv:
  2211                           	callstack 30
  2212   0010EE  0E00               	movlw	0
  2213   0010F0  6E06               	movwf	___awdiv@sign^0,c
  2214   0010F2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2215   0010F4  EF80  F008         	goto	u800
  2216   0010F8  EF7E  F008         	goto	u801
  2217   0010FC                     u801:
  2218   0010FC  EF86  F008         	goto	l1500
  2219   001100                     u800:
  2220   001100  6C03               	negf	___awdiv@divisor^0,c
  2221   001102  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2222   001104  B0D8               	btfsc	status,0,c
  2223   001106  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2224   001108  0E01               	movlw	1
  2225   00110A  6E06               	movwf	___awdiv@sign^0,c
  2226   00110C                     l1500:
  2227   00110C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2228   00110E  EF8D  F008         	goto	u810
  2229   001112  EF8B  F008         	goto	u811
  2230   001116                     u811:
  2231   001116  EF93  F008         	goto	l1506
  2232   00111A                     u810:
  2233   00111A  6C01               	negf	___awdiv@dividend^0,c
  2234   00111C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2235   00111E  B0D8               	btfsc	status,0,c
  2236   001120  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2237   001122  0E01               	movlw	1
  2238   001124  1A06               	xorwf	___awdiv@sign^0,f,c
  2239   001126                     l1506:
  2240   001126  0E00               	movlw	0
  2241   001128  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2242   00112A  0E00               	movlw	0
  2243   00112C  6E07               	movwf	___awdiv@quotient^0,c
  2244   00112E  5003               	movf	___awdiv@divisor^0,w,c
  2245   001130  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2246   001132  B4D8               	btfsc	status,2,c
  2247   001134  EF9E  F008         	goto	u821
  2248   001138  EFA0  F008         	goto	u820
  2249   00113C                     u821:
  2250   00113C  EFC8  F008         	goto	l1528
  2251   001140                     u820:
  2252   001140  0E01               	movlw	1
  2253   001142  6E05               	movwf	___awdiv@counter^0,c
  2254   001144  EFA8  F008         	goto	l1514
  2255   001148                     l1512:
  2256   001148  90D8               	bcf	status,0,c
  2257   00114A  3603               	rlcf	___awdiv@divisor^0,f,c
  2258   00114C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2259   00114E  2A05               	incf	___awdiv@counter^0,f,c
  2260   001150                     l1514:
  2261   001150  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2262   001152  EFAD  F008         	goto	u831
  2263   001156  EFAF  F008         	goto	u830
  2264   00115A                     u831:
  2265   00115A  EFA4  F008         	goto	l1512
  2266   00115E                     u830:
  2267   00115E                     l1516:
  2268   00115E  90D8               	bcf	status,0,c
  2269   001160  3607               	rlcf	___awdiv@quotient^0,f,c
  2270   001162  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2271   001164  5003               	movf	___awdiv@divisor^0,w,c
  2272   001166  5C01               	subwf	___awdiv@dividend^0,w,c
  2273   001168  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2274   00116A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2275   00116C  A0D8               	btfss	status,0,c
  2276   00116E  EFBB  F008         	goto	u841
  2277   001172  EFBD  F008         	goto	u840
  2278   001176                     u841:
  2279   001176  EFC2  F008         	goto	l1524
  2280   00117A                     u840:
  2281   00117A  5003               	movf	___awdiv@divisor^0,w,c
  2282   00117C  5E01               	subwf	___awdiv@dividend^0,f,c
  2283   00117E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2284   001180  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2285   001182  8007               	bsf	___awdiv@quotient^0,0,c
  2286   001184                     l1524:
  2287   001184  90D8               	bcf	status,0,c
  2288   001186  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2289   001188  3203               	rrcf	___awdiv@divisor^0,f,c
  2290   00118A  2E05               	decfsz	___awdiv@counter^0,f,c
  2291   00118C  EFAF  F008         	goto	l1516
  2292   001190                     l1528:
  2293   001190  5006               	movf	___awdiv@sign^0,w,c
  2294   001192  B4D8               	btfsc	status,2,c
  2295   001194  EFCE  F008         	goto	u851
  2296   001198  EFD0  F008         	goto	u850
  2297   00119C                     u851:
  2298   00119C  EFD4  F008         	goto	l1532
  2299   0011A0                     u850:
  2300   0011A0  6C07               	negf	___awdiv@quotient^0,c
  2301   0011A2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2302   0011A4  B0D8               	btfsc	status,0,c
  2303   0011A6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2304   0011A8                     l1532:
  2305   0011A8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2306   0011AC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2307   0011B0  0012               	return		;funcret
  2308   0011B2                     __end_of___awdiv:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _LCD_Initialize *****************
  2312 ;; Defined at:
  2313 ;;		line 176 in file "Lab06.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2330 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2331 ;;Total ram usage:        1 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 2
  2334 ;; This function calls:
  2335 ;;		_LCDPutCmd
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text12
  2342   0012FA                     __ptext12:
  2343                           	callstack 0
  2344   0012FA                     _LCD_Initialize:
  2345                           	callstack 28
  2346   0012FA                     
  2347                           ;Lab06.c: 177:     PORTD = 0;
  2348   0012FA  0E00               	movlw	0
  2349   0012FC  6E83               	movwf	131,c	;volatile
  2350                           
  2351                           ;Lab06.c: 178:     TRISD = 0x00;
  2352   0012FE  0E00               	movlw	0
  2353   001300  6E95               	movwf	149,c	;volatile
  2354   001302                     
  2355                           ;Lab06.c: 179:     PORTDbits.RD7 = 1;
  2356   001302  8E83               	bsf	131,7,c	;volatile
  2357   001304                     
  2358                           ;Lab06.c: 180:     _delay((unsigned long)((15)*(20000000/4000.0)));
  2359   001304  0E62               	movlw	98
  2360   001306  6E05               	movwf	??_LCD_Initialize^0,c
  2361   001308  0E66               	movlw	102
  2362   00130A                     u1347:
  2363   00130A  2EE8               	decfsz	wreg,f,c
  2364   00130C  D7FE               	bra	u1347
  2365   00130E  2E05               	decfsz	??_LCD_Initialize^0,f,c
  2366   001310  D7FC               	bra	u1347
  2367   001312                     
  2368                           ;Lab06.c: 181:     LCDPutCmd(0x32);
  2369   001312  0E32               	movlw	50
  2370   001314  EC5E  F009         	call	_LCDPutCmd
  2371   001318                     
  2372                           ;Lab06.c: 182:     LCDPutCmd(0x28);
  2373   001318  0E28               	movlw	40
  2374   00131A  EC5E  F009         	call	_LCDPutCmd
  2375   00131E                     
  2376                           ;Lab06.c: 183:     LCDPutCmd(0x0C);
  2377   00131E  0E0C               	movlw	12
  2378   001320  EC5E  F009         	call	_LCDPutCmd
  2379   001324                     
  2380                           ;Lab06.c: 184:     LCDPutCmd(0x01);
  2381   001324  0E01               	movlw	1
  2382   001326  EC5E  F009         	call	_LCDPutCmd
  2383   00132A                     
  2384                           ;Lab06.c: 185:     LCDPutCmd(0x06);
  2385   00132A  0E06               	movlw	6
  2386   00132C  EC5E  F009         	call	_LCDPutCmd
  2387   001330  0012               	return		;funcret
  2388   001332                     __end_of_LCD_Initialize:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _LCDPutCmd *****************
  2392 ;; Defined at:
  2393 ;;		line 203 in file "Lab06.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  ch              1    wreg     unsigned char 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  ch              1    3[COMRAM] unsigned char 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0
  2408 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2409 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2410 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2411 ;;Total ram usage:        2 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 1
  2414 ;; This function calls:
  2415 ;;		_LCDWriteNibble
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;;		_LCD_Initialize
  2419 ;;		_LCDGoto
  2420 ;;		_printERROR
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text13
  2425   0012BC                     __ptext13:
  2426                           	callstack 0
  2427   0012BC                     _LCDPutCmd:
  2428                           	callstack 27
  2429                           
  2430                           ;incstack = 0
  2431                           ;LCDPutCmd@ch stored from wreg
  2432   0012BC  6E04               	movwf	LCDPutCmd@ch^0,c
  2433   0012BE                     
  2434                           ;Lab06.c: 204:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2435   0012BE  0E21               	movlw	33
  2436   0012C0  6E03               	movwf	??_LCDPutCmd^0,c
  2437   0012C2  0E76               	movlw	118
  2438   0012C4                     u1357:
  2439   0012C4  2EE8               	decfsz	wreg,f,c
  2440   0012C6  D7FE               	bra	u1357
  2441   0012C8  2E03               	decfsz	??_LCDPutCmd^0,f,c
  2442   0012CA  D7FC               	bra	u1357
  2443   0012CC  D000               	nop2	
  2444   0012CE                     
  2445                           ;Lab06.c: 205:     LCDWriteNibble(ch,0);
  2446   0012CE  0E00               	movlw	0
  2447   0012D0  6E01               	movwf	LCDWriteNibble@rs^0,c
  2448   0012D2  5004               	movf	LCDPutCmd@ch^0,w,c
  2449   0012D4  ECCB  F009         	call	_LCDWriteNibble
  2450   0012D8                     
  2451                           ;Lab06.c: 206:     ch = (ch << 4);
  2452   0012D8  3804               	swapf	LCDPutCmd@ch^0,w,c
  2453   0012DA  0BF0               	andlw	240
  2454   0012DC  6E04               	movwf	LCDPutCmd@ch^0,c
  2455   0012DE                     
  2456                           ;Lab06.c: 207:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2457   0012DE  0E07               	movlw	7
  2458   0012E0  6E03               	movwf	??_LCDPutCmd^0,c
  2459   0012E2  0E7D               	movlw	125
  2460   0012E4                     u1367:
  2461   0012E4  2EE8               	decfsz	wreg,f,c
  2462   0012E6  D7FE               	bra	u1367
  2463   0012E8  2E03               	decfsz	??_LCDPutCmd^0,f,c
  2464   0012EA  D7FC               	bra	u1367
  2465   0012EC  F000               	nop	
  2466   0012EE                     
  2467                           ;Lab06.c: 208:     LCDWriteNibble(ch,0);
  2468   0012EE  0E00               	movlw	0
  2469   0012F0  6E01               	movwf	LCDWriteNibble@rs^0,c
  2470   0012F2  5004               	movf	LCDPutCmd@ch^0,w,c
  2471   0012F4  ECCB  F009         	call	_LCDWriteNibble
  2472   0012F8  0012               	return		;funcret
  2473   0012FA                     __end_of_LCDPutCmd:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _LCDWriteNibble *****************
  2477 ;; Defined at:
  2478 ;;		line 187 in file "Lab06.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  ch              1    wreg     unsigned char 
  2481 ;;  rs              1    0[COMRAM] unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  ch              1    1[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2493 ;;      Params:         1       0       0       0       0       0       0       0       0
  2494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2496 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_LCDPutChar
  2503 ;;		_LCDPutCmd
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text14
  2508   001396                     __ptext14:
  2509                           	callstack 0
  2510   001396                     _LCDWriteNibble:
  2511                           	callstack 28
  2512                           
  2513                           ;incstack = 0
  2514                           ;LCDWriteNibble@ch stored from wreg
  2515   001396  6E02               	movwf	LCDWriteNibble@ch^0,c
  2516   001398                     
  2517                           ;Lab06.c: 188:     ch = (ch >> 4);
  2518   001398  3802               	swapf	LCDWriteNibble@ch^0,w,c
  2519   00139A  0B0F               	andlw	15
  2520   00139C  6E02               	movwf	LCDWriteNibble@ch^0,c
  2521                           
  2522                           ;Lab06.c: 189:     ch = (ch & 0x0F);
  2523   00139E  5002               	movf	LCDWriteNibble@ch^0,w,c
  2524   0013A0  0B0F               	andlw	15
  2525   0013A2  6E02               	movwf	LCDWriteNibble@ch^0,c
  2526                           
  2527                           ;Lab06.c: 190:     PORTD = (PORTD & 0xF0);
  2528   0013A4  5083               	movf	131,w,c	;volatile
  2529   0013A6  0BF0               	andlw	240
  2530   0013A8  6E83               	movwf	131,c	;volatile
  2531                           
  2532                           ;Lab06.c: 191:     PORTD = (PORTD | ch);
  2533   0013AA  5083               	movf	131,w,c	;volatile
  2534   0013AC  1002               	iorwf	LCDWriteNibble@ch^0,w,c
  2535   0013AE  6E83               	movwf	131,c	;volatile
  2536   0013B0                     
  2537                           ;Lab06.c: 192:     PORTDbits.RD4 = rs;
  2538   0013B0  B001               	btfsc	LCDWriteNibble@rs^0,0,c
  2539   0013B2  D002               	bra	u745
  2540   0013B4  9883               	bcf	131,4,c	;volatile
  2541   0013B6  D001               	bra	u746
  2542   0013B8                     u745:
  2543   0013B8  8883               	bsf	131,4,c	;volatile
  2544   0013BA                     u746:
  2545   0013BA                     
  2546                           ;Lab06.c: 193:     PORTDbits.RD5 = 0;
  2547   0013BA  9A83               	bcf	131,5,c	;volatile
  2548   0013BC                     
  2549                           ;Lab06.c: 194:     PORTDbits.RD6 = 1;
  2550   0013BC  8C83               	bsf	131,6,c	;volatile
  2551   0013BE                     
  2552                           ;Lab06.c: 195:     PORTDbits.RD6 = 0;
  2553   0013BE  9C83               	bcf	131,6,c	;volatile
  2554   0013C0  0012               	return		;funcret
  2555   0013C2                     __end_of_LCDWriteNibble:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _InitKeypad *****************
  2559 ;; Defined at:
  2560 ;;		line 171 in file "Lab06.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text15
  2588   00140C                     __ptext15:
  2589                           	callstack 0
  2590   00140C                     _InitKeypad:
  2591                           	callstack 30
  2592   00140C                     
  2593                           ;Lab06.c: 172:     PORTB = 0x00;
  2594   00140C  0E00               	movlw	0
  2595   00140E  6E81               	movwf	129,c	;volatile
  2596                           
  2597                           ;Lab06.c: 173:     TRISB = 0xF0;
  2598   001410  0EF0               	movlw	240
  2599   001412  6E93               	movwf	147,c	;volatile
  2600   001414                     
  2601                           ;Lab06.c: 174:     RBPU = 0;
  2602   001414  9EF1               	bcf	4081,7,c	;volatile
  2603   001416  0012               	return		;funcret
  2604   001418                     __end_of_InitKeypad:
  2605                           	callstack 0
  2606                           
  2607                           	psect	rparam
  2608   000000                     
  2609                           	psect	idloc
  2610                           
  2611                           ;Config register IDLOC0 @ 0x200000
  2612                           ;	unspecified, using default values
  2613   200000                     	org	2097152
  2614   200000  FF                 	db	255
  2615                           
  2616                           ;Config register IDLOC1 @ 0x200001
  2617                           ;	unspecified, using default values
  2618   200001                     	org	2097153
  2619   200001  FF                 	db	255
  2620                           
  2621                           ;Config register IDLOC2 @ 0x200002
  2622                           ;	unspecified, using default values
  2623   200002                     	org	2097154
  2624   200002  FF                 	db	255
  2625                           
  2626                           ;Config register IDLOC3 @ 0x200003
  2627                           ;	unspecified, using default values
  2628   200003                     	org	2097155
  2629   200003  FF                 	db	255
  2630                           
  2631                           ;Config register IDLOC4 @ 0x200004
  2632                           ;	unspecified, using default values
  2633   200004                     	org	2097156
  2634   200004  FF                 	db	255
  2635                           
  2636                           ;Config register IDLOC5 @ 0x200005
  2637                           ;	unspecified, using default values
  2638   200005                     	org	2097157
  2639   200005  FF                 	db	255
  2640                           
  2641                           ;Config register IDLOC6 @ 0x200006
  2642                           ;	unspecified, using default values
  2643   200006                     	org	2097158
  2644   200006  FF                 	db	255
  2645                           
  2646                           ;Config register IDLOC7 @ 0x200007
  2647                           ;	unspecified, using default values
  2648   200007                     	org	2097159
  2649   200007  FF                 	db	255
  2650                           
  2651                           	psect	config
  2652                           
  2653                           ;Config register CONFIG1L @ 0x300000
  2654                           ;	PLL Prescaler Selection bits
  2655                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2656                           ;	System Clock Postscaler Selection bits
  2657                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2658                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2659                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2660   300000                     	org	3145728
  2661   300000  00                 	db	0
  2662                           
  2663                           ;Config register CONFIG1H @ 0x300001
  2664                           ;	Oscillator Selection bits
  2665                           ;	FOSC = HS, HS oscillator (HS)
  2666                           ;	Fail-Safe Clock Monitor Enable bit
  2667                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2668                           ;	Internal/External Oscillator Switchover bit
  2669                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2670   300001                     	org	3145729
  2671   300001  0C                 	db	12
  2672                           
  2673                           ;Config register CONFIG2L @ 0x300002
  2674                           ;	Power-up Timer Enable bit
  2675                           ;	PWRT = OFF, PWRT disabled
  2676                           ;	Brown-out Reset Enable bits
  2677                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2678                           ;	Brown-out Reset Voltage bits
  2679                           ;	BORV = 3, Minimum setting 2.05V
  2680                           ;	USB Voltage Regulator Enable bit
  2681                           ;	VREGEN = OFF, USB voltage regulator disabled
  2682   300002                     	org	3145730
  2683   300002  19                 	db	25
  2684                           
  2685                           ;Config register CONFIG2H @ 0x300003
  2686                           ;	Watchdog Timer Enable bit
  2687                           ;	WDT = ON, WDT enabled
  2688                           ;	Watchdog Timer Postscale Select bits
  2689                           ;	WDTPS = 32768, 1:32768
  2690   300003                     	org	3145731
  2691   300003  1F                 	db	31
  2692                           
  2693                           ; Padding undefined space
  2694   300004                     	org	3145732
  2695   300004  FF                 	db	255
  2696                           
  2697                           ;Config register CONFIG3H @ 0x300005
  2698                           ;	CCP2 MUX bit
  2699                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  2700                           ;	PORTB A/D Enable bit
  2701                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2702                           ;	Low-Power Timer 1 Oscillator Enable bit
  2703                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2704                           ;	MCLR Pin Enable bit
  2705                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  2706   300005                     	org	3145733
  2707   300005  00                 	db	0
  2708                           
  2709                           ;Config register CONFIG4L @ 0x300006
  2710                           ;	Stack Full/Underflow Reset Enable bit
  2711                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2712                           ;	Single-Supply ICSP Enable bit
  2713                           ;	LVP = OFF, Single-Supply ICSP disabled
  2714                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2715                           ;	ICPRT = OFF, ICPORT disabled
  2716                           ;	Extended Instruction Set Enable bit
  2717                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2718                           ;	Background Debugger Enable bit
  2719                           ;	DEBUG = 0x1, unprogrammed default
  2720   300006                     	org	3145734
  2721   300006  80                 	db	128
  2722                           
  2723                           ; Padding undefined space
  2724   300007                     	org	3145735
  2725   300007  FF                 	db	255
  2726                           
  2727                           ;Config register CONFIG5L @ 0x300008
  2728                           ;	Code Protection bit
  2729                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2730                           ;	Code Protection bit
  2731                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2732                           ;	Code Protection bit
  2733                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2734                           ;	Code Protection bit
  2735                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2736   300008                     	org	3145736
  2737   300008  0F                 	db	15
  2738                           
  2739                           ;Config register CONFIG5H @ 0x300009
  2740                           ;	Boot Block Code Protection bit
  2741                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2742                           ;	Data EEPROM Code Protection bit
  2743                           ;	CPD = OFF, Data EEPROM is not code-protected
  2744   300009                     	org	3145737
  2745   300009  C0                 	db	192
  2746                           
  2747                           ;Config register CONFIG6L @ 0x30000A
  2748                           ;	Write Protection bit
  2749                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2750                           ;	Write Protection bit
  2751                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2752                           ;	Write Protection bit
  2753                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2754                           ;	Write Protection bit
  2755                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2756   30000A                     	org	3145738
  2757   30000A  0F                 	db	15
  2758                           
  2759                           ;Config register CONFIG6H @ 0x30000B
  2760                           ;	Configuration Register Write Protection bit
  2761                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2762                           ;	Boot Block Write Protection bit
  2763                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2764                           ;	Data EEPROM Write Protection bit
  2765                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2766   30000B                     	org	3145739
  2767   30000B  E0                 	db	224
  2768                           
  2769                           ;Config register CONFIG7L @ 0x30000C
  2770                           ;	Table Read Protection bit
  2771                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2772                           ;	Table Read Protection bit
  2773                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2774                           ;	Table Read Protection bit
  2775                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2776                           ;	Table Read Protection bit
  2777                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2778   30000C                     	org	3145740
  2779   30000C  0F                 	db	15
  2780                           
  2781                           ;Config register CONFIG7H @ 0x30000D
  2782                           ;	Boot Block Table Read Protection bit
  2783                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2784   30000D                     	org	3145741
  2785   30000D  40                 	db	64
  2786                           tosu	equ	0xFFF
  2787                           tosh	equ	0xFFE
  2788                           tosl	equ	0xFFD
  2789                           stkptr	equ	0xFFC
  2790                           pclatu	equ	0xFFB
  2791                           pclath	equ	0xFFA
  2792                           pcl	equ	0xFF9
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           indf0	equ	0xFEF
  2800                           postinc0	equ	0xFEE
  2801                           postdec0	equ	0xFED
  2802                           preinc0	equ	0xFEC
  2803                           plusw0	equ	0xFEB
  2804                           fsr0h	equ	0xFEA
  2805                           fsr0l	equ	0xFE9
  2806                           wreg	equ	0xFE8
  2807                           indf1	equ	0xFE7
  2808                           postinc1	equ	0xFE6
  2809                           postdec1	equ	0xFE5
  2810                           preinc1	equ	0xFE4
  2811                           plusw1	equ	0xFE3
  2812                           fsr1h	equ	0xFE2
  2813                           fsr1l	equ	0xFE1
  2814                           bsr	equ	0xFE0
  2815                           indf2	equ	0xFDF
  2816                           postinc2	equ	0xFDE
  2817                           postdec2	equ	0xFDD
  2818                           preinc2	equ	0xFDC
  2819                           plusw2	equ	0xFDB
  2820                           fsr2h	equ	0xFDA
  2821                           fsr2l	equ	0xFD9
  2822                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[15]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_result
    _switch_press_scan->_keypad_scanner
    _result->_LCDGoto
    _printERROR->_LCDGoto
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCD_Initialize->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    7686
                                             13 COMRAM    11    11      0
                         _InitKeypad
                         _LCDPutChar
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_Initialize
                            ___awdiv
                             ___wmul
                           _char2num
                         _printERROR
                             _result
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    1     1      0      30
                                              2 COMRAM     1     1      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _result                                               4     2      2    1788
                                             10 COMRAM     3     1      2
                            _LCDGoto
                         _LCDPutChar
                            ___awdiv (ARG)
                             ___wmul (ARG)
                           _num2char
 ---------------------------------------------------------------------------------
 (2) _num2char                                             5     3      2     131
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _printERROR                                           2     2      0    1987
                                             10 COMRAM     2     2      0
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (2) _LCDPutStr                                            5     3      2     703
                                              4 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           2     2      0     461
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              6     5      1     823
                                              4 COMRAM     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _char2num                                             7     5      2      55
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       1     1      0     461
                                              4 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (3) _LCDPutCmd                                            2     2      0     461
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     394
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitKeypad
   _LCDPutChar
     _LCDWriteNibble
   _LCDPutCmd
     _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
   _LCD_Initialize
     _LCDPutCmd
   ___awdiv
   ___wmul
   _char2num
   _printERROR
     _LCDGoto
       _LCDPutCmd
     _LCDPutCmd
     _LCDPutStr
   _result
     _LCDGoto
     _LCDPutChar
     ___awdiv (ARG)
     ___wmul (ARG)
     _num2char (ARG)
   _switch_press_scan
     _keypad_scanner

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     18      18       1       25.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh          E      0       0      20        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhhh       3D      0       0      22        0.0%
BITBIGSFRlhhl        1      0       0      23        0.0%
BITBIGSFRlhlh        F      0       0      24        0.0%
BITBIGSFRlhll        1      0       0      25        0.0%
BITBIGSFRll         21      0       0      26        0.0%
ABS                  0      0       0      27        0.0%
BIGRAM             7FF      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 23 09:59:29 2023

           _LCD_Initialize 12FA                ?_LCDPutChar 0001                         l66 0F20  
                       l92 0862                         l93 084E                         l96 0BC4  
                       l97 089A                         l89 140A                         l98 0886  
                       u30 0838                         u31 0834                         u40 085C  
                       u41 0858                         u50 0870                         u51 086C  
                       u60 0894                         u61 0890                         u70 08A8  
                       u71 08A4                         u80 08CC                         u81 08C8  
                       u90 08E0                         u91 08DC               ___awdiv@sign 0006  
      ___wmul@multiplicand 0003                        l101 08D2                        l110 0936  
                      l102 08BE                        l121 09F2                        l113 0982  
                      l105 090A                        l202 1020                        l130 0A56  
                      l122 09DE                        l114 096E                        l106 08F6  
                      l221 12BA                        l141 0B1A                        l133 0AA2  
                      l125 0A32                        l117 09BA                        l109 094A  
                      l150 0B76                        l142 0B06                        l134 0A8E  
                      l126 0A1E                        l118 09A6                        l207 10E6  
                      l224 1366                        l217 10EC                        l145 0B52  
                      l137 0ADA                        l129 0A6A                        l162 1330  
                      l154 0BAE                        l146 0B3E                        l138 0AC6  
                      l171 12F8                        l227 13E6                        l165 13C0  
                      l149 0B8A                        l159 1416                        l183 1222  
                      l192 1018                        l168 1394                        l177 1272  
                      l458 11B0                        l940 085C                        l950 08A8  
                      l952 08CC                        l944 0870                        l936 0822  
                      l970 097C                        l962 0920                        l946 0894  
                      l938 0838                        l980 09C8                        l964 0944  
                      l956 08E0                        l982 09EC                        l974 0990  
                      l958 0904                        l992 0A40                        l976 09B4  
                      l968 0958                        l994 0A64                        l986 0A08  
                      l988 0A2C                        l998 0A78                        _RB0 007C08  
                      _RB1 007C09                        _RB2 007C0A                        _RB3 007C0B  
                      _RB4 007C0C                        _RB5 007C0D                        _RB6 007C0E  
                      _RB7 007C0F                        u100 0904                        u101 0900  
                      u110 0920                        u111 091C                        u200 0A2C  
                      u120 0944                        u201 0A28                        u121 0940  
                      u210 0A40                        u130 0958                        u211 0A3C  
                      u131 0954                        u300 0B4C                        u220 0A64  
                      u140 097C                        u301 0B48                        u221 0A60  
                      u141 0978                        u310 0B60                        u230 0A78  
                      u150 0990                        u311 0B5C                        u231 0A74  
                      u151 098C                        u320 0B84                        u240 0A9C  
                      u160 09B4                        u321 0B80                        u241 0A98  
                      u161 09B0                        u330 0B98                        u250 0AB0  
                      u170 09C8                        u331 0B94                        u251 0AAC  
                      u171 09C4                        u340 0BBC                        u260 0AD4  
                      u180 09EC                        u341 0BB8                        u261 0AD0  
                      u181 09E8                        u270 0AF0                        u190 0A08  
                      u271 0AEC                        u191 0A04                        u280 0B14  
                      u281 0B10                        u290 0B28                        u291 0B24  
                      u380 1408                        u381 1404                        u800 1100  
                      u801 10FC                        u810 111A                        u811 1116  
                      u820 1140                        u900 0C7E                        u821 113C  
                      u901 0C7A                        u830 115E                        u750 1272  
                      u910 0C92                        u831 115A                        u751 126E  
                      u911 0C8E                        u840 117A                        u760 11C4  
                      u920 0CA6                        u745 13B8                        u841 1176  
                      u761 11C0                        u921 0CA2                        u746 13BA  
                      u850 11A0                        u770 11D4                        u930 0CBA  
                      u851 119C                        u771 11D0                        u931 0CB6  
                      u780 11E8                        u940 0CCE                        u860 0C28  
                      u781 11E4                        u941 0CCA                        u861 0C24  
                      u790 1286                        u950 0CE2                        u870 0C44  
                      u791 1282                        u951 0CDE                        u871 0C40  
                      u960 0CF6                        u880 0C56                        u961 0CF2  
                      u881 0C52                        u970 0D18                        u890 0C6A  
                      u971 0D14                        u891 0C66                        u980 0D2A  
                      u981 0D26                        u990 0D3C                        u991 0D38  
                      wreg 000FE8            __end_of_LCDGoto 1224                       l1000 0A9C  
                     l1010 0AF0                       l1100 1414                       l1012 0B14  
                     l1004 0AB0                       l1030 0BBC                       l1022 0B60  
                     l1006 0AD4                       l1102 13E8                       l1024 0B84  
                     l1016 0B28                       l1104 13F0                       l1034 0BC2  
                     l1018 0B4C                       l1106 13F6                       l1028 0B98  
                     l1108 1408                       l1400 1052                       l1402 105A  
                     l1340 13B0                       l1420 1302                       l1500 110C  
                     l1404 1062                       l1412 107A                       l1342 13BA  
                     l1350 12CE                       l1430 1324                       l1422 1304  
                     l1510 1140                       l1502 111A                       l1406 106A  
                     l1344 13BC                       l1352 12D8                       l1432 132A  
                     l1424 1312                       l1520 117A                       l1512 1148  
                     l1504 1122                       l1440 0F4E                       l1360 137A  
                     l1408 1072                       l1600 0D8C                       l1098 140C  
                     l1346 13BE                       l1338 1398                       l1354 12DE  
                     l1426 1318                       l1418 12FA                       l1530 11A0  
                     l1522 1182                       l1514 1150                       l1506 1126  
                     l1450 0F8A                       l1442 0F5A                       l1434 0F2A  
                     l1362 1384                       l1370 1248                       l1610 0DF0  
                     l1602 0DA0                       l1356 12EE                       l1348 12BE  
                     l1428 131E                       l1532 11A8                       l1524 1184  
                     l1516 115E                       l1508 112E                       l1452 0F96  
                     l1444 0F66                       l1436 0F36                       l1380 11E8  
                     l1364 138A                       l1372 124A                       l1620 0E4A  
                     l1612 0E04                       l1604 0DB4                       l1540 0BCE  
                     l1526 118A                       l1518 1164                       l1454 0FA2  
                     l1446 0F72                       l1438 0F42                       l1382 11FC  
                     l1374 11B4                       l1358 136A                       l1366 1224  
                     l1470 1360                       l1390 102A                       l1630 0E9E  
                     l1622 0E5C                       l1614 0E18                       l1606 0DC8  
                     l1550 0BFC                       l1542 0BDA                       l1528 1190  
                     l1448 0F7E                       l1384 120C                       l1376 11C4  
                     l1368 122C                       l1464 1332                       l1392 1032  
                     l1480 1298                       l1472 1274                       l1632 0EC2  
                     l1608 0DDC                       l1616 0E2C                       l1624 0E6E  
                     l1560 0C28                       l1552 0BFC                       l1544 0BF2  
                     l1536 0BC6                       l1458 0FAE                       l1386 1212  
                     l1378 11D8                       l1466 133C                       l1394 103A  
                     l1482 129E                       l1474 1278                       l1626 0E76  
                     l1618 0E38                       l1570 0C7E                       l1562 0C32  
                     l1554 0C02                       l1546 0BF8                       l1538 0BCA  
                     l1492 10EE                       l1468 1348                       l1396 1042  
                     l1388 1022                       l1484 12A8                       l1476 1286  
                     l1660 0EFA                       l1628 0E8A                       l1636 0EE6  
                     l1580 0CE2                       l1572 0C92                       l1564 0C44  
                     l1556 0C08                       l1548 0BFC                       l1494 10F2  
                     l1486 13C2                       l1662 1090                       l1398 104A  
                     l1478 1290                       l1590 0D2A                       l1574 0CA6  
                     l1566 0C56                       l1582 0CF6                       l1558 0C16  
                     l1496 1100                       l1488 13DE                       l1664 0FC2  
                     l1592 0D3C                       l1584 0D02                       l1576 0CBA  
                     l1568 0C6A                       l1498 1108                       l1594 0D4E  
                     l1586 0D06                       l1578 0CCE                       l1596 0D68  
                     l1588 0D18                       l1598 0D7A                       STR_1 0801  
                     STR_2 0811                       u1000 0D4E                       u1001 0D4A  
                     u1010 0D7A                       u1011 0D76                       u1100 0E2C  
                     u1020 0D8C                       u1101 0E28                       u1021 0D88  
                     u1110 0E4A                       u1030 0DA0                       u1111 0E46  
                     u1031 0D9C                       u1120 0E5C                       u1040 0DB4  
                     u1121 0E58                       u1041 0DB0                       u1130 0E6E  
                     u1050 0DC8                       u1131 0E6A                       u1051 0DC4  
                     u1060 0DDC                       u1061 0DD8                       u1070 0DF0  
                     u1207 0962                       u1071 0DEC                       u1080 0E04  
                     u1217 099A                       u1081 0E00                       u1090 0E18  
                     u1307 0BA2                       u1227 09D2                       u1091 0E14  
                     u1147 0BE4                       u1317 1352                       u1237 0A12  
                     u1157 0842                       u1327 1370                       u1247 0A4A  
                     u1167 087A                       u1337 1218                       u1257 0A82  
                     u1177 08B2                       u1347 130A                       u1267 0ABA  
                     u1187 08EA                       u1357 12C4                       u1277 0AFA  
                     u1197 092A                       u1367 12E4                       u1287 0B32  
                     u1297 0B6A                       _RBPU 007F8F                main@leftnum 0015  
              main@key_res 0011                       _main 0BC6                       prodh 000FF4  
                     prodl 000FF3                       start 0000     __end_of_LCD_Initialize 1332  
             ___param_bank 000000                LCDPutCmd@ch 0004                      ?_main 0001  
          __end_of___awdiv 11B2            ___awdiv@divisor 0003            ___awdiv@counter 0005  
                    _PORTB 000F81                      _PORTD 000F83                      _TRISB 000F93  
                    _TRISD 000F95               main@key_math 0014           ??_keypad_scanner 0001  
             main@rightnum 0017                      tablat 000FF5                      status 000FD8  
         result@TenthDigit 000D                 _InitKeypad 140C            ?_LCD_Initialize 0001  
          __initialization 1418               __end_of_main 0F28                     ??_main 000E  
            __activetblptr 000002                  ??_LCDGoto 0006          __end_of_LCDPutCmd 12FA  
             LCDPutChar@ch 0004          __end_of_LCDPutStr 1274           ___awdiv@dividend 0001  
                   _OSCCON 000FD3           __end_of_char2num 1022               LCDPutStr@str 0005  
            main@key_right 0010             _LCDWriteNibble 1396                     ___wmul 13C2  
                ??___awdiv 0005           ___awdiv@quotient 0007           __end_of_num2char 10EE  
                   isa$std 000001                     _result 1274               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
   __end_of_LCDWriteNibble 13C2                 __accesstop 0060    __end_of__initialization 1418  
            ___rparam_used 000001                  LCDGoto@ln 0005                num2char@num 0005  
              ?_InitKeypad 0001             __pcstackCOMRAM 0001               ??_LCDPutChar 0003  
          ?_LCDWriteNibble 0001         __end_of_LCDPutChar 1396                    ?___wmul 0001  
                  ?_result 000B                  ?_char2num 0001                    _LCDGoto 11B2  
               char2num@ch 0005           ??_LCD_Initialize 0005                  ?_num2char 0001  
                  __Hparam 0000                    __Lparam 0000                    ___awdiv 10EE  
             __psmallconst 0800                    __pcinit 1418                    __ramtop 0800  
                  __ptext0 0BC6                    __ptext1 13E8                    __ptext2 0822  
                  __ptext3 1274                    __ptext4 1022                    __ptext5 1332  
                  __ptext6 1224                    __ptext7 1368                    __ptext8 11B2  
                  __ptext9 0F28                 ??_char2num 0003                  _LCDPutCmd 12BC  
                  main@key 0013                  _LCDPutStr 1224       end_of_initialization 1418  
            __Lmediumconst 0000                 ??_num2char 0003                 _printERROR 1332  
                _PORTDbits 000F83       switch_press_scan@key 0003                 ?_LCDPutCmd 0001  
               ?_LCDPutStr 0005                 LCDGoto@pos 000A               ??_InitKeypad 0001  
               LCDPutStr@i 0009             __end_of___wmul 13E8             __end_of_result 12BC  
      start_initialization 1418           ??_LCDWriteNibble 0002         __end_of_InitKeypad 1418  
                 ??___wmul 0005                ?_printERROR 0001                   ??_result 000D  
                 ?_LCDGoto 0005                 num2char@ch 0001                ??_LCDPutCmd 0003  
              ??_LCDPutStr 0007                   ?___awdiv 0001           LCDWriteNibble@ch 0002  
         LCDWriteNibble@rs 0001                __smallconst 0800             ___wmul@product 0005  
           _keypad_scanner 0822                _LCDGoto$176 0008                 result@numb 000B  
        _switch_press_scan 13E8                char2num@num 0006          ___wmul@multiplier 0001  
       ?_switch_press_scan 0001        ??_switch_press_scan 0003     __end_of_keypad_scanner 0BC6  
                 __Hrparam 0000                   __Lrparam 0000  __end_of_switch_press_scan 140C  
                 _char2num 0F28                   __ptext10 13C2                   __ptext11 10EE  
                 __ptext12 12FA                   __ptext13 12BC                   __ptext14 1396  
                 __ptext15 140C            ?_keypad_scanner 0001                   _num2char 1022  
                 isa$xinst 000000               ??_printERROR 000B                 _LCDPutChar 1368  
                 main@math 0012         __end_of_printERROR 1368  
