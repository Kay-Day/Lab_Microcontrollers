

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 16 20:33:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     _PORTD	set	3971
    52   000000                     _RC2	set	31762
    53   000000                     _RC1	set	31761
    54   000000                     _RC0	set	31760
    55   000000                     _TRISC2	set	31906
    56   000000                     _RD4	set	31772
    57   000000                     _RD3	set	31771
    58   000000                     _RD2	set	31770
    59   000000                     _RD1	set	31769
    60   000000                     _RD0	set	31768
    61   000000                     _PORTB	set	3969
    62   000000                     _TRISC	set	3988
    63   000000                     _TRISD	set	3989
    64   000000                     _CCP1CON	set	4029
    65   000000                     _TMR2IF	set	31985
    66   000000                     _T2CON	set	4042
    67   000000                     _CCPR1L	set	4030
    68   000000                     _PR2	set	4043
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73   007E30                     __pcinit:
    74                           	callstack 0
    75   007E30                     start_initialization:
    76                           	callstack 0
    77   007E30                     __initialization:
    78                           	callstack 0
    79   007E30                     end_of_initialization:
    80                           	callstack 0
    81   007E30                     __end_of__initialization:
    82                           	callstack 0
    83   007E30  0100               	movlb	0
    84   007E32  EF48  F03F         	goto	_main	;jump to C main() function
    85                           
    86                           	psect	cstackCOMRAM
    87   000001                     __pcstackCOMRAM:
    88                           	callstack 0
    89   000001                     PWM_duty@pwm_duty:
    90                           	callstack 0
    91   000001                     direction_motor@val:
    92                           	callstack 0
    93                           
    94                           ; 2 bytes @ 0x0
    95   000001                     	ds	2
    96   000003                     ??_PWM_duty:
    97                           
    98                           ; 1 bytes @ 0x2
    99   000003                     	ds	2
   100   000005                     ??_main:
   101                           
   102                           ; 1 bytes @ 0x4
   103   000005                     	ds	1
   104                           
   105 ;;
   106 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   107 ;;
   108 ;; *************** function _main *****************
   109 ;; Defined at:
   110 ;;		line 112 in file "CodeLab07.c"
   111 ;; Parameters:    Size  Location     Type
   112 ;;		None
   113 ;; Auto vars:     Size  Location     Type
   114 ;;		None
   115 ;; Return value:  Size  Location     Type
   116 ;;                  1    wreg      void 
   117 ;; Registers used:
   118 ;;		wreg, status,2, status,0, cstack
   119 ;; Tracked objects:
   120 ;;		On entry : 0/0
   121 ;;		On exit  : 0/0
   122 ;;		Unchanged: 0/0
   123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   124 ;;      Params:         0       0       0       0       0       0       0       0       0
   125 ;;      Locals:         0       0       0       0       0       0       0       0       0
   126 ;;      Temps:          1       0       0       0       0       0       0       0       0
   127 ;;      Totals:         1       0       0       0       0       0       0       0       0
   128 ;;Total ram usage:        1 bytes
   129 ;; Hardware stack levels required when called: 1
   130 ;; This function calls:
   131 ;;		_PWM_duty
   132 ;;		_PWM_init
   133 ;;		_direction_motor
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140   007E90                     __ptext0:
   141                           	callstack 0
   142   007E90                     _main:
   143                           	callstack 30
   144   007E90                     
   145                           ;CodeLab07.c: 113:     PORTB = 0;
   146   007E90  0E00               	movlw	0
   147   007E92  6E81               	movwf	129,c	;volatile
   148                           
   149                           ;CodeLab07.c: 114:     PORTD = 0;
   150   007E94  0E00               	movlw	0
   151   007E96  6E83               	movwf	131,c	;volatile
   152                           
   153                           ;CodeLab07.c: 115:     TRISD = 1;
   154   007E98  0E01               	movlw	1
   155   007E9A  6E95               	movwf	149,c	;volatile
   156                           
   157                           ;CodeLab07.c: 116:     TRISC = 0;
   158   007E9C  0E00               	movlw	0
   159   007E9E  6E94               	movwf	148,c	;volatile
   160   007EA0                     
   161                           ;CodeLab07.c: 117:     PWM_init();
   162   007EA0  EC1B  F03F         	call	_PWM_init	;wreg free
   163   007EA4                     l821:
   164                           
   165                           ;CodeLab07.c: 119:        if(RD0 == 1) direction_motor(1);
   166   007EA4  A083               	btfss	3971,0,c	;volatile
   167   007EA6  EF57  F03F         	goto	u201
   168   007EAA  EF59  F03F         	goto	u200
   169   007EAE                     u201:
   170   007EAE  EF61  F03F         	goto	l825
   171   007EB2                     u200:
   172   007EB2  0E00               	movlw	0
   173   007EB4  6E02               	movwf	(direction_motor@val+1)^0,c
   174   007EB6  0E01               	movlw	1
   175   007EB8  6E01               	movwf	direction_motor@val^0,c
   176   007EBA  EC26  F03F         	call	_direction_motor	;wreg free
   177   007EBE  EF67  F03F         	goto	l827
   178   007EC2                     l825:
   179   007EC2  0E00               	movlw	0
   180   007EC4  6E02               	movwf	(direction_motor@val+1)^0,c
   181   007EC6  0E00               	movlw	0
   182   007EC8  6E01               	movwf	direction_motor@val^0,c
   183   007ECA  EC26  F03F         	call	_direction_motor	;wreg free
   184   007ECE                     l827:
   185                           
   186                           ;CodeLab07.c: 121:        if(RD1 == 1 && RD2 == 0 && RD3 == 0 && RD4 == 0 ) PWM_duty(0);
   187   007ECE  A283               	btfss	3971,1,c	;volatile
   188   007ED0  EF6C  F03F         	goto	u211
   189   007ED4  EF6E  F03F         	goto	u210
   190   007ED8                     u211:
   191   007ED8  EF8B  F03F         	goto	l52
   192   007EDC                     u210:
   193   007EDC  B483               	btfsc	3971,2,c	;volatile
   194   007EDE  EF73  F03F         	goto	u221
   195   007EE2  EF75  F03F         	goto	u220
   196   007EE6                     u221:
   197   007EE6  EF8B  F03F         	goto	l52
   198   007EEA                     u220:
   199   007EEA  B683               	btfsc	3971,3,c	;volatile
   200   007EEC  EF7A  F03F         	goto	u231
   201   007EF0  EF7C  F03F         	goto	u230
   202   007EF4                     u231:
   203   007EF4  EF8B  F03F         	goto	l52
   204   007EF8                     u230:
   205   007EF8  B883               	btfsc	3971,4,c	;volatile
   206   007EFA  EF81  F03F         	goto	u241
   207   007EFE  EF83  F03F         	goto	u240
   208   007F02                     u241:
   209   007F02  EF8B  F03F         	goto	l52
   210   007F06                     u240:
   211   007F06                     l835:
   212   007F06  0E00               	movlw	0
   213   007F08  6E02               	movwf	(PWM_duty@pwm_duty+1)^0,c
   214   007F0A  0E00               	movlw	0
   215   007F0C  6E01               	movwf	PWM_duty@pwm_duty^0,c
   216   007F0E  EC36  F03F         	call	_PWM_duty	;wreg free
   217   007F12  EFF4  F03F         	goto	l863
   218   007F16                     l52:
   219   007F16  B283               	btfsc	3971,1,c	;volatile
   220   007F18  EF90  F03F         	goto	u251
   221   007F1C  EF92  F03F         	goto	u250
   222   007F20                     u251:
   223   007F20  EFAF  F03F         	goto	l54
   224   007F24                     u250:
   225   007F24  A483               	btfss	3971,2,c	;volatile
   226   007F26  EF97  F03F         	goto	u261
   227   007F2A  EF99  F03F         	goto	u260
   228   007F2E                     u261:
   229   007F2E  EFAF  F03F         	goto	l54
   230   007F32                     u260:
   231   007F32  B683               	btfsc	3971,3,c	;volatile
   232   007F34  EF9E  F03F         	goto	u271
   233   007F38  EFA0  F03F         	goto	u270
   234   007F3C                     u271:
   235   007F3C  EFAF  F03F         	goto	l54
   236   007F40                     u270:
   237   007F40  B883               	btfsc	3971,4,c	;volatile
   238   007F42  EFA5  F03F         	goto	u281
   239   007F46  EFA7  F03F         	goto	u280
   240   007F4A                     u281:
   241   007F4A  EFAF  F03F         	goto	l54
   242   007F4E                     u280:
   243   007F4E  0E01               	movlw	1
   244   007F50  6E02               	movwf	(PWM_duty@pwm_duty+1)^0,c
   245   007F52  0EF4               	movlw	244
   246   007F54  6E01               	movwf	PWM_duty@pwm_duty^0,c
   247   007F56  EC36  F03F         	call	_PWM_duty	;wreg free
   248   007F5A  EFF4  F03F         	goto	l863
   249   007F5E                     l54:
   250   007F5E  B283               	btfsc	3971,1,c	;volatile
   251   007F60  EFB4  F03F         	goto	u291
   252   007F64  EFB6  F03F         	goto	u290
   253   007F68                     u291:
   254   007F68  EFD3  F03F         	goto	l56
   255   007F6C                     u290:
   256   007F6C  B483               	btfsc	3971,2,c	;volatile
   257   007F6E  EFBB  F03F         	goto	u301
   258   007F72  EFBD  F03F         	goto	u300
   259   007F76                     u301:
   260   007F76  EFD3  F03F         	goto	l56
   261   007F7A                     u300:
   262   007F7A  A683               	btfss	3971,3,c	;volatile
   263   007F7C  EFC2  F03F         	goto	u311
   264   007F80  EFC4  F03F         	goto	u310
   265   007F84                     u311:
   266   007F84  EFD3  F03F         	goto	l56
   267   007F88                     u310:
   268   007F88  B883               	btfsc	3971,4,c	;volatile
   269   007F8A  EFC9  F03F         	goto	u321
   270   007F8E  EFCB  F03F         	goto	u320
   271   007F92                     u321:
   272   007F92  EFD3  F03F         	goto	l56
   273   007F96                     u320:
   274   007F96  0E03               	movlw	3
   275   007F98  6E02               	movwf	(PWM_duty@pwm_duty+1)^0,c
   276   007F9A  0E84               	movlw	132
   277   007F9C  6E01               	movwf	PWM_duty@pwm_duty^0,c
   278   007F9E  EC36  F03F         	call	_PWM_duty	;wreg free
   279   007FA2  EFF4  F03F         	goto	l863
   280   007FA6                     l56:
   281   007FA6  B283               	btfsc	3971,1,c	;volatile
   282   007FA8  EFD8  F03F         	goto	u331
   283   007FAC  EFDA  F03F         	goto	u330
   284   007FB0                     u331:
   285   007FB0  EF83  F03F         	goto	l835
   286   007FB4                     u330:
   287   007FB4  B483               	btfsc	3971,2,c	;volatile
   288   007FB6  EFDF  F03F         	goto	u341
   289   007FBA  EFE1  F03F         	goto	u340
   290   007FBE                     u341:
   291   007FBE  EF83  F03F         	goto	l835
   292   007FC2                     u340:
   293   007FC2  B683               	btfsc	3971,3,c	;volatile
   294   007FC4  EFE6  F03F         	goto	u351
   295   007FC8  EFE8  F03F         	goto	u350
   296   007FCC                     u351:
   297   007FCC  EF83  F03F         	goto	l835
   298   007FD0                     u350:
   299   007FD0  A883               	btfss	3971,4,c	;volatile
   300   007FD2  EFED  F03F         	goto	u361
   301   007FD6  EFEF  F03F         	goto	u360
   302   007FDA                     u361:
   303   007FDA  EF83  F03F         	goto	l835
   304   007FDE                     u360:
   305   007FDE  0E03               	movlw	3
   306   007FE0  6E02               	movwf	(PWM_duty@pwm_duty+1)^0,c
   307   007FE2  6801               	setf	PWM_duty@pwm_duty^0,c
   308   007FE4  EC36  F03F         	call	_PWM_duty	;wreg free
   309   007FE8                     l863:
   310                           
   311                           ;CodeLab07.c: 126:        _delay((unsigned long)((1)*(20000000/4000.0)));
   312   007FE8  0E07               	movlw	7
   313   007FEA  6E05               	movwf	??_main^0,c
   314   007FEC  0E7D               	movlw	125
   315   007FEE                     u377:
   316   007FEE  2EE8               	decfsz	wreg,f,c
   317   007FF0  D7FE               	bra	u377
   318   007FF2  2E05               	decfsz	??_main^0,f,c
   319   007FF4  D7FC               	bra	u377
   320   007FF6  F000               	nop	
   321   007FF8  EF52  F03F         	goto	l821
   322   007FFC  EF00  F000         	goto	start
   323   008000                     __end_of_main:
   324                           	callstack 0
   325                           
   326 ;; *************** function _direction_motor *****************
   327 ;; Defined at:
   328 ;;		line 143 in file "CodeLab07.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  val             2    0[COMRAM] int 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   342 ;;      Params:         2       0       0       0       0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0       0       0
   345 ;;      Totals:         2       0       0       0       0       0       0       0       0
   346 ;;Total ram usage:        2 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text1
   356   007E4C                     __ptext1:
   357                           	callstack 0
   358   007E4C                     _direction_motor:
   359                           	callstack 30
   360   007E4C                     
   361                           ;CodeLab07.c: 144:     if(val == 0){
   362   007E4C  5001               	movf	direction_motor@val^0,w,c
   363   007E4E  1002               	iorwf	(direction_motor@val+1)^0,w,c
   364   007E50  A4D8               	btfss	status,2,c
   365   007E52  EF2D  F03F         	goto	u191
   366   007E56  EF2F  F03F         	goto	u190
   367   007E5A                     u191:
   368   007E5A  EF33  F03F         	goto	l71
   369   007E5E                     u190:
   370   007E5E                     
   371                           ;CodeLab07.c: 145:         RC0 = 1;
   372   007E5E  8082               	bsf	3970,0,c	;volatile
   373                           
   374                           ;CodeLab07.c: 146:         RC1 = 0;
   375   007E60  9282               	bcf	3970,1,c	;volatile
   376                           
   377                           ;CodeLab07.c: 147:     }else {
   378   007E62  EF35  F03F         	goto	l73
   379   007E66                     l71:
   380                           
   381                           ;CodeLab07.c: 148:         RC0 = 0;
   382   007E66  9082               	bcf	3970,0,c	;volatile
   383                           
   384                           ;CodeLab07.c: 149:         RC1 = 1;
   385   007E68  8282               	bsf	3970,1,c	;volatile
   386   007E6A                     l73:
   387   007E6A  0012               	return		;funcret
   388   007E6C                     __end_of_direction_motor:
   389                           	callstack 0
   390                           
   391 ;; *************** function _PWM_init *****************
   392 ;; Defined at:
   393 ;;		line 130 in file "CodeLab07.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   407 ;;      Params:         0       0       0       0       0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text2
   421   007E36                     __ptext2:
   422                           	callstack 0
   423   007E36                     _PWM_init:
   424                           	callstack 30
   425   007E36                     
   426                           ;CodeLab07.c: 131:     RC2 = 0;
   427   007E36  9482               	bcf	3970,2,c	;volatile
   428                           
   429                           ;CodeLab07.c: 132:     TRISC2 = 0;
   430   007E38  9494               	bcf	3988,2,c	;volatile
   431   007E3A                     
   432                           ;CodeLab07.c: 133:     CCP1CON = 0x0c;
   433   007E3A  0E0C               	movlw	12
   434   007E3C  6EBD               	movwf	189,c	;volatile
   435                           
   436                           ;CodeLab07.c: 134:     CCPR1L = 0;
   437   007E3E  0E00               	movlw	0
   438   007E40  6EBE               	movwf	190,c	;volatile
   439   007E42                     
   440                           ;CodeLab07.c: 135:     TMR2IF = 0;
   441   007E42  929E               	bcf	3998,1,c	;volatile
   442                           
   443                           ;CodeLab07.c: 136:     T2CON = 0x05;
   444   007E44  0E05               	movlw	5
   445   007E46  6ECA               	movwf	202,c	;volatile
   446   007E48                     
   447                           ;CodeLab07.c: 137:     PR2 = 0xff;
   448   007E48  68CB               	setf	203,c	;volatile
   449   007E4A  0012               	return		;funcret
   450   007E4C                     __end_of_PWM_init:
   451                           	callstack 0
   452                           
   453 ;; *************** function _PWM_duty *****************
   454 ;; Defined at:
   455 ;;		line 139 in file "CodeLab07.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;  pwm_duty        2    0[COMRAM] unsigned short 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   469 ;;      Params:         2       0       0       0       0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0
   471 ;;      Temps:          2       0       0       0       0       0       0       0       0
   472 ;;      Totals:         4       0       0       0       0       0       0       0       0
   473 ;;Total ram usage:        4 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text3
   483   007E6C                     __ptext3:
   484                           	callstack 0
   485   007E6C                     _PWM_duty:
   486                           	callstack 30
   487   007E6C                     
   488                           ;CodeLab07.c: 140:     CCP1CON = ((pwm_duty << 4) & 0x30)| 0x0c;
   489   007E6C  3801               	swapf	PWM_duty@pwm_duty^0,w,c
   490   007E6E  0BF0               	andlw	240
   491   007E70  0B30               	andlw	48
   492   007E72  090C               	iorlw	12
   493   007E74  6EBD               	movwf	189,c	;volatile
   494                           
   495                           ;CodeLab07.c: 141:     CCPR1L = pwm_duty >> 2;
   496   007E76  C001  F003         	movff	PWM_duty@pwm_duty,??_PWM_duty
   497   007E7A  C002  F004         	movff	PWM_duty@pwm_duty+1,??_PWM_duty+1
   498   007E7E  90D8               	bcf	status,0,c
   499   007E80  3204               	rrcf	(??_PWM_duty+1)^0,f,c
   500   007E82  3203               	rrcf	??_PWM_duty^0,f,c
   501   007E84  90D8               	bcf	status,0,c
   502   007E86  3204               	rrcf	(??_PWM_duty+1)^0,f,c
   503   007E88  3203               	rrcf	??_PWM_duty^0,f,c
   504   007E8A  5003               	movf	??_PWM_duty^0,w,c
   505   007E8C  6EBE               	movwf	190,c	;volatile
   506   007E8E  0012               	return		;funcret
   507   007E90                     __end_of_PWM_duty:
   508                           	callstack 0
   509   000000                     
   510                           	psect	rparam
   511   000000                     
   512                           	psect	idloc
   513                           
   514                           ;Config register IDLOC0 @ 0x200000
   515                           ;	unspecified, using default values
   516   200000                     	org	2097152
   517   200000  FF                 	db	255
   518                           
   519                           ;Config register IDLOC1 @ 0x200001
   520                           ;	unspecified, using default values
   521   200001                     	org	2097153
   522   200001  FF                 	db	255
   523                           
   524                           ;Config register IDLOC2 @ 0x200002
   525                           ;	unspecified, using default values
   526   200002                     	org	2097154
   527   200002  FF                 	db	255
   528                           
   529                           ;Config register IDLOC3 @ 0x200003
   530                           ;	unspecified, using default values
   531   200003                     	org	2097155
   532   200003  FF                 	db	255
   533                           
   534                           ;Config register IDLOC4 @ 0x200004
   535                           ;	unspecified, using default values
   536   200004                     	org	2097156
   537   200004  FF                 	db	255
   538                           
   539                           ;Config register IDLOC5 @ 0x200005
   540                           ;	unspecified, using default values
   541   200005                     	org	2097157
   542   200005  FF                 	db	255
   543                           
   544                           ;Config register IDLOC6 @ 0x200006
   545                           ;	unspecified, using default values
   546   200006                     	org	2097158
   547   200006  FF                 	db	255
   548                           
   549                           ;Config register IDLOC7 @ 0x200007
   550                           ;	unspecified, using default values
   551   200007                     	org	2097159
   552   200007  FF                 	db	255
   553                           
   554                           	psect	config
   555                           
   556                           ;Config register CONFIG1L @ 0x300000
   557                           ;	PLL Prescaler Selection bits
   558                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   559                           ;	System Clock Postscaler Selection bits
   560                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   561                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   562                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   563   300000                     	org	3145728
   564   300000  00                 	db	0
   565                           
   566                           ;Config register CONFIG1H @ 0x300001
   567                           ;	Oscillator Selection bits
   568                           ;	FOSC = HS, HS oscillator (HS)
   569                           ;	Fail-Safe Clock Monitor Enable bit
   570                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   571                           ;	Internal/External Oscillator Switchover bit
   572                           ;	IESO = OFF, Oscillator Switchover mode disabled
   573   300001                     	org	3145729
   574   300001  0C                 	db	12
   575                           
   576                           ;Config register CONFIG2L @ 0x300002
   577                           ;	Power-up Timer Enable bit
   578                           ;	PWRT = OFF, PWRT disabled
   579                           ;	Brown-out Reset Enable bits
   580                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   581                           ;	Brown-out Reset Voltage bits
   582                           ;	BORV = 3, Minimum setting 2.05V
   583                           ;	USB Voltage Regulator Enable bit
   584                           ;	VREGEN = OFF, USB voltage regulator disabled
   585   300002                     	org	3145730
   586   300002  19                 	db	25
   587                           
   588                           ;Config register CONFIG2H @ 0x300003
   589                           ;	Watchdog Timer Enable bit
   590                           ;	WDT = ON, WDT enabled
   591                           ;	Watchdog Timer Postscale Select bits
   592                           ;	WDTPS = 32768, 1:32768
   593   300003                     	org	3145731
   594   300003  1F                 	db	31
   595                           
   596                           ; Padding undefined space
   597   300004                     	org	3145732
   598   300004  FF                 	db	255
   599                           
   600                           ;Config register CONFIG3H @ 0x300005
   601                           ;	CCP2 MUX bit
   602                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   603                           ;	PORTB A/D Enable bit
   604                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   605                           ;	Low-Power Timer 1 Oscillator Enable bit
   606                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   607                           ;	MCLR Pin Enable bit
   608                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   609   300005                     	org	3145733
   610   300005  83                 	db	131
   611                           
   612                           ;Config register CONFIG4L @ 0x300006
   613                           ;	Stack Full/Underflow Reset Enable bit
   614                           ;	STVREN = ON, Stack full/underflow will cause Reset
   615                           ;	Single-Supply ICSP Enable bit
   616                           ;	LVP = ON, Single-Supply ICSP enabled
   617                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   618                           ;	ICPRT = OFF, ICPORT disabled
   619                           ;	Extended Instruction Set Enable bit
   620                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   621                           ;	Background Debugger Enable bit
   622                           ;	DEBUG = 0x1, unprogrammed default
   623   300006                     	org	3145734
   624   300006  85                 	db	133
   625                           
   626                           ; Padding undefined space
   627   300007                     	org	3145735
   628   300007  FF                 	db	255
   629                           
   630                           ;Config register CONFIG5L @ 0x300008
   631                           ;	Code Protection bit
   632                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   633                           ;	Code Protection bit
   634                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   635                           ;	Code Protection bit
   636                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   637                           ;	Code Protection bit
   638                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   639   300008                     	org	3145736
   640   300008  0F                 	db	15
   641                           
   642                           ;Config register CONFIG5H @ 0x300009
   643                           ;	Boot Block Code Protection bit
   644                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   645                           ;	Data EEPROM Code Protection bit
   646                           ;	CPD = OFF, Data EEPROM is not code-protected
   647   300009                     	org	3145737
   648   300009  C0                 	db	192
   649                           
   650                           ;Config register CONFIG6L @ 0x30000A
   651                           ;	Write Protection bit
   652                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   653                           ;	Write Protection bit
   654                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   655                           ;	Write Protection bit
   656                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   657                           ;	Write Protection bit
   658                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   659   30000A                     	org	3145738
   660   30000A  0F                 	db	15
   661                           
   662                           ;Config register CONFIG6H @ 0x30000B
   663                           ;	Configuration Register Write Protection bit
   664                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   665                           ;	Boot Block Write Protection bit
   666                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   667                           ;	Data EEPROM Write Protection bit
   668                           ;	WRTD = OFF, Data EEPROM is not write-protected
   669   30000B                     	org	3145739
   670   30000B  E0                 	db	224
   671                           
   672                           ;Config register CONFIG7L @ 0x30000C
   673                           ;	Table Read Protection bit
   674                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   675                           ;	Table Read Protection bit
   676                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   677                           ;	Table Read Protection bit
   678                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   679                           ;	Table Read Protection bit
   680                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   681   30000C                     	org	3145740
   682   30000C  0F                 	db	15
   683                           
   684                           ;Config register CONFIG7H @ 0x30000D
   685                           ;	Boot Block Table Read Protection bit
   686                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   687   30000D                     	org	3145741
   688   30000D  40                 	db	64
   689                           tosu	equ	0xFFF
   690                           tosh	equ	0xFFE
   691                           tosl	equ	0xFFD
   692                           stkptr	equ	0xFFC
   693                           pclatu	equ	0xFFB
   694                           pclath	equ	0xFFA
   695                           pcl	equ	0xFF9
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           prodh	equ	0xFF4
   701                           prodl	equ	0xFF3
   702                           indf0	equ	0xFEF
   703                           postinc0	equ	0xFEE
   704                           postdec0	equ	0xFED
   705                           preinc0	equ	0xFEC
   706                           plusw0	equ	0xFEB
   707                           fsr0h	equ	0xFEA
   708                           fsr0l	equ	0xFE9
   709                           wreg	equ	0xFE8
   710                           indf1	equ	0xFE7
   711                           postinc1	equ	0xFE6
   712                           postdec1	equ	0xFE5
   713                           preinc1	equ	0xFE4
   714                           plusw1	equ	0xFE3
   715                           fsr1h	equ	0xFE2
   716                           fsr1l	equ	0xFE1
   717                           bsr	equ	0xFE0
   718                           indf2	equ	0xFDF
   719                           postinc2	equ	0xFDE
   720                           postdec2	equ	0xFDD
   721                           preinc2	equ	0xFDC
   722                           plusw2	equ	0xFDB
   723                           fsr2h	equ	0xFDA
   724                           fsr2l	equ	0xFD9
   725                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM_duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     598
                                              4 COMRAM     1     1      0
                           _PWM_duty
                           _PWM_init
                    _direction_motor
 ---------------------------------------------------------------------------------
 (1) _direction_motor                                      2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_duty                                             4     2      2     424
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_duty
   _PWM_init
   _direction_motor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhhhhh      34      0       0      21        0.0%
BITBIGSFRhhhhl       B      0       0      22        0.0%
BITBIGSFRhhhlh      1E      0       0      23        0.0%
BITBIGSFRhhhll       8      0       0      24        0.0%
BITBIGSFRhhl        10      0       0      25        0.0%
BITBIGSFRl          21      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 16 20:33:47 2023

                     l52 7F16                       l54 7F5E                       l71 7E66  
                     l56 7FA6                       l65 7E4A                       l73 7E6A  
                     l68 7E8E                      l811 7E4C                      l813 7E5E  
                    l821 7EA4                      l815 7E6C                      l751 7E3A  
                    l831 7EEA                      l823 7EB2                      l753 7E42  
                    l841 7F40                      l833 7EF8                      l825 7EC2  
                    l817 7E90                      l755 7E48                      l851 7F96  
                    l843 7F4E                      l835 7F06                      l827 7ECE  
                    l819 7EA0                      l749 7E36                      l853 7FB4  
                    l845 7F6C                      l837 7F24                      l829 7EDC  
                    l855 7FC2                      l847 7F7A                      l839 7F32  
                    l863 7FE8                      l857 7FD0                      l849 7F88  
                    l859 7FDE                      _RC0 007C10                      _RC1 007C11  
                    _RD0 007C18                      _RC2 007C12                      _RD1 007C19  
                    _RD2 007C1A                      _RD3 007C1B                      _RD4 007C1C  
                    u200 7EB2                      u201 7EAE                      u210 7EDC  
                    u211 7ED8                      u300 7F7A                      u220 7EEA  
                    u301 7F76                      u221 7EE6                      u310 7F88  
                    u230 7EF8                      u311 7F84                      u231 7EF4  
                    u320 7F96                      u240 7F06                      u321 7F92  
                    u241 7F02                      u330 7FB4                      u250 7F24  
                    u331 7FB0                      u251 7F20                      u340 7FC2  
                    u260 7F32                      u341 7FBE                      u261 7F2E  
                    u190 7E5E                      u350 7FD0                      u270 7F40  
                    _PR2 000FCB                      u191 7E5A                      u351 7FCC  
                    u271 7F3C                      u360 7FDE                      u280 7F4E  
                    u361 7FDA                      u281 7F4A                      u290 7F6C  
                    u291 7F68                      u377 7FEE                      wreg 000FE8  
     direction_motor@val 0001                     _main 7E90                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _T2CON 000FCA  
                  _PORTB 000F81                    _PORTD 000F83                    _TRISC 000F94  
                  _TRISD 000F95         __end_of_PWM_init 7E4C         __end_of_PWM_duty 7E90  
                  status 000FD8          __initialization 7E30             __end_of_main 8000  
                 ??_main 0005            __activetblptr 000000                   _CCPR1L 000FBE  
                 _TMR2IF 007CF1                   _TRISC2 007CA2                   isa$std 000001  
      ??_direction_motor 0003               __accesstop 0060  __end_of__initialization 7E30  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_PWM_init 0001  
              ?_PWM_duty 0001                  _CCP1CON 000FBD               ??_PWM_init 0001  
             ??_PWM_duty 0003                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7E30                  __ramtop 0800                  __ptext0 7E90  
                __ptext1 7E4C                  __ptext2 7E36                  __ptext3 7E6C  
   end_of_initialization 7E30          _direction_motor 7E4C      start_initialization 7E30  
__end_of_direction_motor 7E6C         ?_direction_motor 0001                 _PWM_init 7E36  
               _PWM_duty 7E6C                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000         PWM_duty@pwm_duty 0001  
