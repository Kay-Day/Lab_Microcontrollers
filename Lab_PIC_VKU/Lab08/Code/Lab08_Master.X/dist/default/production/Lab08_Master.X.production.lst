

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 17 07:47:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	text7,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0013                     _SSPBUF	set	19
   174     0014                     _SSPCON	set	20
   175     0008                     _PORTD	set	8
   176     0093                     _SSPADD	set	147
   177     0094                     _SSPSTAT	set	148
   178     0091                     _SSPCON2	set	145
   179     0088                     _TRISD	set	136
   180     048B                     _RCEN	set	1163
   181     048E                     _ACKSTAT	set	1166
   182     048C                     _ACKEN	set	1164
   183     048D                     _ACKDT	set	1165
   184     0489                     _RSEN	set	1161
   185     048A                     _PEN	set	1162
   186     0488                     _SEN	set	1160
   187     043C                     _TRISC4	set	1084
   188     043B                     _TRISC3	set	1083
   189                           
   190                           	psect	cinit
   191     07FC                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07FC                     __initialization:
   195     07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     07FC                     __end_of__initialization:
   199     07FC  0183               	clrf	3
   200     07FD  120A  118A  2FC9   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	cstackCOMMON
   203     0070                     __pcstackCOMMON:
   204     0070                     ?_I2C_Master_Init:
   205     0070                     ??_I2C_Master_Init:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_I2C_Start:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ??_I2C_Start:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?_I2C_Write:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ??_I2C_Write:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0070                     ?_I2C_Read:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0070                     ??_I2C_Read:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0070                     ?_I2C_Stop:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0070                     ??_I2C_Stop:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0070                     ?_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235     0070                     ?_I2C_Wait:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ??_I2C_Wait:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_I2C_NACK:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ??_I2C_NACK:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     I2C_Write@Data:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     I2C_Read@Data:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255     0070                     	ds	1
   256     0071                     ??_main:
   257                           
   258                           ; 1 bytes @ 0x1
   259     0071                     	ds	3
   260                           
   261                           	psect	maintext
   262     07C9                     __pmaintext:	
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 25 in file "Lab08_MasterCode.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0, pclath, cstack
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0
   284 ;;      Temps:          3       0       0       0       0
   285 ;;      Totals:         3       0       0       0       0
   286 ;;Total ram usage:        3 bytes
   287 ;; Hardware stack levels required when called: 3
   288 ;; This function calls:
   289 ;;		_I2C_Master_Init
   290 ;;		_I2C_Read
   291 ;;		_I2C_Start
   292 ;;		_I2C_Stop
   293 ;;		_I2C_Write
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299     07C9                     _main:	
   300                           ;psect for function _main
   301                           
   302     07C9                     l722:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   305                           
   306                           
   307                           ;Lab08_MasterCode.c: 26:     TRISD = 0x00;
   308     07C9  1683               	bsf	3,5	;RP0=1, select bank1
   309     07CA  1303               	bcf	3,6	;RP1=0, select bank1
   310     07CB  0188               	clrf	8	;volatile
   311                           
   312                           ;Lab08_MasterCode.c: 27:     PORTD = 0x00;
   313     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   314     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   315     07CE  0188               	clrf	8	;volatile
   316     07CF                     l724:
   317                           
   318                           ;Lab08_MasterCode.c: 28:     I2C_Master_Init();
   319     07CF  120A  118A  2787  120A  118A  	fcall	_I2C_Master_Init
   320     07D4                     l726:
   321                           
   322                           ;Lab08_MasterCode.c: 30:         I2C_Start();
   323     07D4  120A  118A  276B  120A  118A  	fcall	_I2C_Start
   324     07D9                     l728:
   325                           
   326                           ;Lab08_MasterCode.c: 31:         I2C_Write(0x41);
   327     07D9  3041               	movlw	65
   328     07DA  120A  118A  27A1  120A  118A  	fcall	_I2C_Write
   329     07DF                     l730:
   330                           
   331                           ;Lab08_MasterCode.c: 32:         PORTD = I2C_Read();
   332     07DF  120A  118A  27B1  120A  118A  	fcall	_I2C_Read
   333     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   334     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   335     07E6  0088               	movwf	8	;volatile
   336     07E7                     l732:
   337                           
   338                           ;Lab08_MasterCode.c: 33:         I2C_Stop();
   339     07E7  120A  118A  2774  120A  118A  	fcall	_I2C_Stop
   340     07EC                     l734:
   341                           
   342                           ;Lab08_MasterCode.c: 34:         _delay((unsigned long)((100)*(16000000/4000.0)));
   343     07EC  3003               	movlw	3
   344     07ED  00F3               	movwf	??_main+2
   345     07EE  3008               	movlw	8
   346     07EF  00F2               	movwf	??_main+1
   347     07F0  3077               	movlw	119
   348     07F1  00F1               	movwf	??_main
   349     07F2                     u37:
   350     07F2  0BF1               	decfsz	??_main,f
   351     07F3  2FF2               	goto	u37
   352     07F4  0BF2               	decfsz	??_main+1,f
   353     07F5  2FF2               	goto	u37
   354     07F6  0BF3               	decfsz	??_main+2,f
   355     07F7  2FF2               	goto	u37
   356     07F8  2FD4               	goto	l726
   357     07F9  120A  118A  2800   	ljmp	start
   358     07FC                     __end_of_main:
   359                           
   360                           	psect	text1
   361     07A1                     __ptext1:	
   362 ;; *************** function _I2C_Write *****************
   363 ;; Defined at:
   364 ;;		line 71 in file "Lab08_MasterCode.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;  Data            1    wreg     unsigned char 
   367 ;; Auto vars:     Size  Location     Type
   368 ;;  Data            1    0[COMMON] unsigned char 
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      unsigned char 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         1       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0
   381 ;;      Totals:         1       0       0       0       0
   382 ;;Total ram usage:        1 bytes
   383 ;; Hardware stack levels used: 1
   384 ;; Hardware stack levels required when called: 1
   385 ;; This function calls:
   386 ;;		_I2C_Wait
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392     07A1                     _I2C_Write:	
   393                           ;psect for function _I2C_Write
   394                           
   395                           
   396                           ;incstack = 0
   397                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
   398                           ;I2C_Write@Data stored from wreg
   399     07A1  00F0               	movwf	I2C_Write@Data
   400     07A2                     l698:
   401                           
   402                           ;Lab08_MasterCode.c: 72:     I2C_Wait();
   403     07A2  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   404     07A7                     l700:
   405                           
   406                           ;Lab08_MasterCode.c: 73:     SSPBUF = Data;
   407     07A7  0870               	movf	I2C_Write@Data,w
   408     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   409     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   410     07AA  0093               	movwf	19	;volatile
   411     07AB                     l702:
   412                           
   413                           ;Lab08_MasterCode.c: 74:     I2C_Wait();
   414     07AB  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   415     07B0                     l704:
   416     07B0                     l79:	
   417                           ;Lab08_MasterCode.c: 75:     return ACKSTAT;;	Return value of _I2C_Write is never used
   418                           
   419     07B0  0008               	return
   420     07B1                     __end_of_I2C_Write:
   421                           
   422                           	psect	text2
   423     0774                     __ptext2:	
   424 ;; *************** function _I2C_Stop *****************
   425 ;; Defined at:
   426 ;;		line 53 in file "Lab08_MasterCode.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; Hardware stack levels required when called: 1
   447 ;; This function calls:
   448 ;;		_I2C_Wait
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454     0774                     _I2C_Stop:	
   455                           ;psect for function _I2C_Stop
   456                           
   457     0774                     l718:	
   458                           ;incstack = 0
   459                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
   460                           
   461                           
   462                           ;Lab08_MasterCode.c: 54:     I2C_Wait();
   463     0774  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   464     0779                     l720:
   465                           
   466                           ;Lab08_MasterCode.c: 55:     PEN = 1;
   467     0779  1683               	bsf	3,5	;RP0=1, select bank1
   468     077A  1303               	bcf	3,6	;RP1=0, select bank1
   469     077B  1511               	bsf	17,2	;volatile
   470     077C                     l67:
   471     077C  0008               	return
   472     077D                     __end_of_I2C_Stop:
   473                           
   474                           	psect	text3
   475     076B                     __ptext3:	
   476 ;; *************** function _I2C_Start *****************
   477 ;; Defined at:
   478 ;;		line 49 in file "Lab08_MasterCode.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 1
   499 ;; This function calls:
   500 ;;		_I2C_Wait
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506     076B                     _I2C_Start:	
   507                           ;psect for function _I2C_Start
   508                           
   509     076B                     l694:	
   510                           ;incstack = 0
   511                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;Lab08_MasterCode.c: 50:     I2C_Wait();
   515     076B  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   516     0770                     l696:
   517                           
   518                           ;Lab08_MasterCode.c: 51:     SEN = 1;
   519     0770  1683               	bsf	3,5	;RP0=1, select bank1
   520     0771  1303               	bcf	3,6	;RP1=0, select bank1
   521     0772  1411               	bsf	17,0	;volatile
   522     0773                     l64:
   523     0773  0008               	return
   524     0774                     __end_of_I2C_Start:
   525                           
   526                           	psect	text4
   527     07B1                     __ptext4:	
   528 ;; *************** function _I2C_Read *****************
   529 ;; Defined at:
   530 ;;		line 77 in file "Lab08_MasterCode.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  Data            1    0[COMMON] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         1       0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 2
   551 ;; This function calls:
   552 ;;		_I2C_NACK
   553 ;;		_I2C_Wait
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559     07B1                     _I2C_Read:	
   560                           ;psect for function _I2C_Read
   561                           
   562     07B1                     l708:	
   563                           ;incstack = 0
   564                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
   565                           
   566                           
   567                           ;Lab08_MasterCode.c: 78:     unsigned char Data;;Lab08_MasterCode.c: 79:     I2C_Wait();
   568     07B1  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   569     07B6                     l710:
   570                           
   571                           ;Lab08_MasterCode.c: 80:     RCEN = 1;
   572     07B6  1683               	bsf	3,5	;RP0=1, select bank1
   573     07B7  1303               	bcf	3,6	;RP1=0, select bank1
   574     07B8  1591               	bsf	17,3	;volatile
   575                           
   576                           ;Lab08_MasterCode.c: 81:     I2C_Wait();
   577     07B9  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   578     07BE                     l712:
   579                           
   580                           ;Lab08_MasterCode.c: 82:     Data = SSPBUF;
   581     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   582     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   583     07C0  0813               	movf	19,w	;volatile
   584     07C1  00F0               	movwf	I2C_Read@Data
   585     07C2                     l714:
   586                           
   587                           ;Lab08_MasterCode.c: 83:     I2C_NACK();
   588     07C2  120A  118A  277D  120A  118A  	fcall	_I2C_NACK
   589                           
   590                           ;Lab08_MasterCode.c: 84:     return Data;
   591     07C7  0870               	movf	I2C_Read@Data,w
   592     07C8                     l82:
   593     07C8  0008               	return
   594     07C9                     __end_of_I2C_Read:
   595                           
   596                           	psect	text5
   597     077D                     __ptext5:	
   598 ;; *************** function _I2C_NACK *****************
   599 ;; Defined at:
   600 ;;		line 66 in file "Lab08_MasterCode.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         0       0       0       0       0
   618 ;;Total ram usage:        0 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 1
   621 ;; This function calls:
   622 ;;		_I2C_Wait
   623 ;; This function is called by:
   624 ;;		_I2C_Read
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628     077D                     _I2C_NACK:	
   629                           ;psect for function _I2C_NACK
   630                           
   631     077D                     l678:	
   632                           ;incstack = 0
   633                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
   634                           
   635                           
   636                           ;Lab08_MasterCode.c: 67:     I2C_Wait();
   637     077D  120A  118A  2794  120A  118A  	fcall	_I2C_Wait
   638     0782                     l680:
   639                           
   640                           ;Lab08_MasterCode.c: 68:     ACKDT = 1;
   641     0782  1683               	bsf	3,5	;RP0=1, select bank1
   642     0783  1303               	bcf	3,6	;RP1=0, select bank1
   643     0784  1691               	bsf	17,5	;volatile
   644     0785                     l682:
   645                           
   646                           ;Lab08_MasterCode.c: 69:     ACKEN = 1;
   647     0785  1611               	bsf	17,4	;volatile
   648     0786                     l76:
   649     0786  0008               	return
   650     0787                     __end_of_I2C_NACK:
   651                           
   652                           	psect	text6
   653     0794                     __ptext6:	
   654 ;; *************** function _I2C_Wait *****************
   655 ;; Defined at:
   656 ;;		line 46 in file "Lab08_MasterCode.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0
   673 ;;      Totals:         0       0       0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_I2C_Start
   680 ;;		_I2C_Stop
   681 ;;		_I2C_NACK
   682 ;;		_I2C_Write
   683 ;;		_I2C_Read
   684 ;;		_I2C_Restart
   685 ;;		_I2C_ACK
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689     0794                     _I2C_Wait:	
   690                           ;psect for function _I2C_Wait
   691                           
   692     0794                     l674:	
   693                           ;incstack = 0
   694                           ; Regs used in _I2C_Wait: [wreg+status,2]
   695                           
   696     0794                     l58:	
   697                           ;Lab08_MasterCode.c: 47:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   698                           
   699     0794  1683               	bsf	3,5	;RP0=1, select bank1
   700     0795  1303               	bcf	3,6	;RP1=0, select bank1
   701     0796  1914               	btfsc	20,2	;volatile
   702     0797  2F99               	goto	u11
   703     0798  2F9A               	goto	u10
   704     0799                     u11:
   705     0799  2F94               	goto	l58
   706     079A                     u10:
   707     079A                     l676:
   708     079A  0811               	movf	17,w	;volatile
   709     079B  391F               	andlw	31
   710     079C  1D03               	btfss	3,2
   711     079D  2F9F               	goto	u21
   712     079E  2FA0               	goto	u20
   713     079F                     u21:
   714     079F  2F94               	goto	l58
   715     07A0                     u20:
   716     07A0                     l61:
   717     07A0  0008               	return
   718     07A1                     __end_of_I2C_Wait:
   719                           
   720                           	psect	text7
   721     0787                     __ptext7:	
   722 ;; *************** function _I2C_Master_Init *****************
   723 ;; Defined at:
   724 ;;		line 38 in file "Lab08_MasterCode.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, status,2
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751     0787                     _I2C_Master_Init:	
   752                           ;psect for function _I2C_Master_Init
   753                           
   754     0787                     l684:	
   755                           ;incstack = 0
   756                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
   757                           
   758                           
   759                           ;Lab08_MasterCode.c: 39:     SSPCON = 0x28;
   760     0787  3028               	movlw	40
   761     0788  1283               	bcf	3,5	;RP0=0, select bank0
   762     0789  1303               	bcf	3,6	;RP1=0, select bank0
   763     078A  0094               	movwf	20	;volatile
   764     078B                     l686:
   765                           
   766                           ;Lab08_MasterCode.c: 40:     SSPCON2 = 0x00;
   767     078B  1683               	bsf	3,5	;RP0=1, select bank1
   768     078C  1303               	bcf	3,6	;RP1=0, select bank1
   769     078D  0191               	clrf	17	;volatile
   770     078E                     l688:
   771                           
   772                           ;Lab08_MasterCode.c: 41:     SSPSTAT = 0x00;
   773     078E  0194               	clrf	20	;volatile
   774                           
   775                           ;Lab08_MasterCode.c: 42:     SSPADD = ((16000000/4)/100000) - 1;
   776     078F  3027               	movlw	39
   777     0790  0093               	movwf	19	;volatile
   778     0791                     l690:
   779                           
   780                           ;Lab08_MasterCode.c: 43:     TRISC3 = 1;
   781     0791  1587               	bsf	7,3	;volatile
   782     0792                     l692:
   783                           
   784                           ;Lab08_MasterCode.c: 44:     TRISC4 = 1;
   785     0792  1607               	bsf	7,4	;volatile
   786     0793                     l55:
   787     0793  0008               	return
   788     0794                     __end_of_I2C_Master_Init:
   789     007E                     btemp	set	126	;btemp
   790     007E                     wtemp0	set	126
   791                           
   792                           	psect	idloc
   793                           
   794                           ;Config register IDLOC0 @ 0x2000
   795                           ;	unspecified, using default values
   796     2000                     	org	8192
   797     2000  3FFF               	dw	16383
   798                           
   799                           ;Config register IDLOC1 @ 0x2001
   800                           ;	unspecified, using default values
   801     2001                     	org	8193
   802     2001  3FFF               	dw	16383
   803                           
   804                           ;Config register IDLOC2 @ 0x2002
   805                           ;	unspecified, using default values
   806     2002                     	org	8194
   807     2002  3FFF               	dw	16383
   808                           
   809                           ;Config register IDLOC3 @ 0x2003
   810                           ;	unspecified, using default values
   811     2003                     	org	8195
   812     2003  3FFF               	dw	16383
   813                           
   814                           	psect	config
   815                           
   816                           ;Config register CONFIG @ 0x2007
   817                           ;	Oscillator Selection bits
   818                           ;	FOSC = XT, XT oscillator
   819                           ;	Watchdog Timer Enable bit
   820                           ;	WDTE = OFF, WDT disabled
   821                           ;	Power-up Timer Enable bit
   822                           ;	PWRTE = OFF, PWRT disabled
   823                           ;	Brown-out Reset Enable bit
   824                           ;	BOREN = ON, BOR enabled
   825                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   826                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   827                           ;	Data EEPROM Memory Code Protection bit
   828                           ;	CPD = OFF, Data EEPROM code protection off
   829                           ;	Flash Program Memory Write Enable bits
   830                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   831                           ;	In-Circuit Debugger Mode bit
   832                           ;	DEBUG = 0x1, unprogrammed default
   833                           ;	Flash Program Memory Code Protection bit
   834                           ;	CP = OFF, Code protection off
   835     2007                     	org	8199
   836     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Read
    _main->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              1 COMMON     3     3      0
                    _I2C_Master_Init
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_NACK
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Read
     _I2C_NACK
       _I2C_Wait
     _I2C_Wait
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _I2C_Write
     _I2C_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 17 07:47:30 2023

                     l61 07A0                       l55 0793                       l64 0773  
                     l58 0794                       l82 07C8                       l67 077C  
                     l76 0786                       l79 07B0                       u10 079A  
                     u11 0799                       u20 07A0                       u21 079F  
                     u37 07F2                      l700 07A7                      l710 07B6  
                    l702 07AB                      l712 07BE                      l720 0779  
                    l704 07B0                      l714 07C2                      l730 07DF  
                    l722 07C9                      l708 07B1                      l732 07E7  
                    l724 07CF                      l718 0774                      l734 07EC  
                    l726 07D4                      l680 0782                      l728 07D9  
                    l690 0791                      l674 0794                      l682 0785  
                    l692 0792                      l684 0787                      l676 079A  
                    l686 078B                      l678 077D                      l694 076B  
                    l688 078E                      l696 0770                      l698 07A2  
                    _PEN 048A                      _SEN 0488                     _RCEN 048B  
                   _RSEN 0489         __end_of_I2C_NACK 0787                     _main 07C9  
       __end_of_I2C_Read 07C9                     btemp 007E         __end_of_I2C_Wait 07A1  
       __end_of_I2C_Stop 077D                     start 0000         ?_I2C_Master_Init 0070  
                  ?_main 0070                    _ACKEN 048C                    _ACKDT 048D  
                  _PORTD 0008                    _TRISD 0088        __end_of_I2C_Start 0774  
      __end_of_I2C_Write 07B1                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0071  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                ?_I2C_NACK 0070  
              ?_I2C_Read 0070                ?_I2C_Wait 0070                ?_I2C_Stop 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_I2C_NACK 0070  
             ??_I2C_Read 0070               ??_I2C_Wait 0070               ??_I2C_Stop 0070  
           I2C_Read@Data 0070               __pmaintext 07C9                  _ACKSTAT 048E  
                _SSPCON2 0091                  _SSPSTAT 0094                _I2C_Start 076B  
              _I2C_Write 07A1                  __ptext1 07A1                  __ptext2 0774  
                __ptext3 076B                  __ptext4 07B1                  __ptext5 077D  
                __ptext6 0794                  __ptext7 0787     end_of_initialization 07FC  
             ?_I2C_Start 0070               ?_I2C_Write 0070      start_initialization 07FC  
      ??_I2C_Master_Init 0070              ??_I2C_Start 0070              ??_I2C_Write 0070  
              ___latbits 0002                 _I2C_NACK 077D                 _I2C_Read 07B1  
               _I2C_Wait 0794                 _I2C_Stop 0774            I2C_Write@Data 0070  
        _I2C_Master_Init 0787  __end_of_I2C_Master_Init 0794  
